<?xml version="1.0" encoding="UTF-8"?><fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" xml:lang="en" font-size="11pt" font-family="SansSerif"><fo:layout-master-set><fo:simple-page-master margin-right="2.5cm" margin-left="2.5cm" margin-bottom="1cm" margin-top="2cm" page-width="21cm" page-height="29.7cm" master-name="DIN-A4"><fo:region-body margin-right="0cm" margin-left="0cm" margin-bottom="1.8cm" margin-top="1.3cm"/><fo:region-before extent="1.3cm" region-name="header"/><fo:region-after extent="1.5cm" region-name="footer"/><fo:region-start extent="0cm" region-name="left"/><fo:region-end extent="0cm" region-name="right"/></fo:simple-page-master></fo:layout-master-set><fo:page-sequence master-reference="DIN-A4"><fo:static-content flow-name="header"><fo:block border-bottom-style="solid" text-align="right" font-size="14pt">Digital</fo:block></fo:static-content><fo:static-content flow-name="footer"><fo:block border-top-style="solid" text-align-last="justify"><fo:inline font-size="8pt" text-align="left"><fo:basic-link show-destination="new" external-destination="https://github.com/hneemann/Digital">
                                https://github.com/hneemann/Digital
                            </fo:basic-link></fo:inline><fo:leader/><fo:inline text-align="right"><fo:page-number/> / <fo:page-number-citation ref-id="LastPage"/></fo:inline></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block font-weight="bold" font-size="80pt" margin-top="10mm">Digital</fo:block><fo:block text-align="center" margin-top="20mm"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/../../../distribution/screenshot.png')" width="100%" content-width="scale-to-fit"/></fo:block><fo:table width="100%" margin-top="3cm" table-layout="fixed"><fo:table-column column-width="2.5cm" column-number="1"/><fo:table-column column-width="12cm" column-number="2"/><fo:table-body><fo:table-row><fo:table-cell column-number="1"><fo:block text-align="left">Revision:</fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block text-align="left">v0.29-38-g48d3e30-dirty</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block text-align="left">Date:</fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block text-align="left">2022-05-23 18:51</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table><fo:block font-weight="bold" font-size="18pt" margin-bottom="5mm" page-break-before="always">Table of Contents</fo:block><fo:block font-weight="bold" margin-bottom="2mm">
						A
						<fo:inline padding-left="1mm">General</fo:inline></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_2" show-destination="replace">1. Digital</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_2"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_1_1" show-destination="replace">1.1. Introduction</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_1_1"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_2_1" show-destination="replace">1.2. First Steps</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_2_1"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_3_1" show-destination="replace">1.3. Wires</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_3_1"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_4_1" show-destination="replace">1.4. Hierarchical Design</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_4_1"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_4" show-destination="replace">2. Simulation</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_4"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_1_2" show-destination="replace">2.1. Propagation Delay</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_1_2"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_6" show-destination="replace">3. Analysis</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_6"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_1_3" show-destination="replace">3.1. Circuit Analysis and Synthesis</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_1_3"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_2_3" show-destination="replace">3.2. Expression</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_2_3"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_3_3" show-destination="replace">3.3. State charts</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_3_3"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_8" show-destination="replace">4. Hardware</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_8"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_1_4" show-destination="replace">4.1. GAL16v8 and GAL22v10</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_1_4"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_2_4" show-destination="replace">4.2. ATF150xAS</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_2_4"/></fo:block><fo:block text-align-last="justify" margin-left="2mm"><fo:basic-link internal-destination="chap_3_4" show-destination="replace">4.3. Export to VHDL or Verilog</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_3_4"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_10" show-destination="replace">5. Custom Shapes</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_10"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_12" show-destination="replace">6. Generic Circuits</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_12"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_14" show-destination="replace">7. Script-controlled testing</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_14"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_16" show-destination="replace">8. Frequently asked Questions</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_16"/></fo:block>
    <fo:block text-align-last="justify"><fo:basic-link internal-destination="chap_18" show-destination="replace">9. Keyboard Shortcuts</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="chap_18"/></fo:block>
<fo:block font-weight="bold" margin-bottom="2mm" margin-top="2mm"><fo:basic-link internal-destination="chap_settings" show-destination="replace">
							B
							<fo:inline padding-left="2mm">Settings</fo:inline></fo:basic-link></fo:block><fo:block font-weight="bold" margin-bottom="2mm" margin-top="2mm"><fo:basic-link internal-destination="chap_cli" show-destination="replace">
							C
							<fo:inline padding-left="2mm">Command Line Interface</fo:inline></fo:basic-link></fo:block><fo:block font-weight="bold" margin-bottom="2mm" margin-top="2mm">
						D
						<fo:inline padding-left="2mm">Components</fo:inline></fo:block><fo:block>1. Logic</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_1" show-destination="replace">1.1. And</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_2" show-destination="replace">1.2. NAnd</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_3" show-destination="replace">1.3. Or</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_4" show-destination="replace">1.4. NOr</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_5" show-destination="replace">1.5. XOr</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_6" show-destination="replace">1.6. XNOr</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_7" show-destination="replace">1.7. Not</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="1_8" show-destination="replace">1.8. Lookup Table</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="1_8"/></fo:block><fo:block>2. IO</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_1" show-destination="replace">2.1. Output</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_2" show-destination="replace">2.2. LED</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_3" show-destination="replace">2.3. Input</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_4" show-destination="replace">2.4. Clock Input</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_5" show-destination="replace">2.5. Button</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_6" show-destination="replace">2.6. DIP Switch</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_7" show-destination="replace">2.7. Probe</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_8" show-destination="replace">2.8. Data Graph</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_8"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="2_9" show-destination="replace">2.9. Triggered Data Graph</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="2_9"/></fo:block><fo:block>3. IO - Displays</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_1" show-destination="replace">3.1. RGB-LED</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_2" show-destination="replace">3.2. LED with two connections.</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_3" show-destination="replace">3.3. Button with LED</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_4" show-destination="replace">3.4. Seven-Segment Display</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_5" show-destination="replace">3.5. Seven-Segment Hex Display</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_6" show-destination="replace">3.6. 16-Segment Display</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_7" show-destination="replace">3.7. Light Bulb</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="3_8" show-destination="replace">3.8. LED-Matrix</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="3_8"/></fo:block><fo:block>4. IO - Mechanical</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="4_1" show-destination="replace">4.1. Rotary Encoder</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="4_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="4_2" show-destination="replace">4.2. Stepper Motor, unipolar</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="4_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="4_3" show-destination="replace">4.3. Stepper Motor, bipolar</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="4_3"/></fo:block><fo:block>5. IO - Peripherals</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="5_1" show-destination="replace">5.1. Keyboard</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="5_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="5_2" show-destination="replace">5.2. Terminal</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="5_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="5_3" show-destination="replace">5.3. Telnet</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="5_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="5_4" show-destination="replace">5.4. VGA Monitor</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="5_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="5_5" show-destination="replace">5.5. MIDI</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="5_5"/></fo:block><fo:block>6. Wires</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_1" show-destination="replace">6.1. Ground</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_2" show-destination="replace">6.2. Supply voltage</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_3" show-destination="replace">6.3. Constant value</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_4" show-destination="replace">6.4. Tunnel</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_5" show-destination="replace">6.5. Splitter/Merger</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_6" show-destination="replace">6.6. Driver</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_7" show-destination="replace">6.7. Driver, inverted select</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_8" show-destination="replace">6.8. Delay</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_8"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_9" show-destination="replace">6.9. Pull-Up Resistor</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_9"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_10" show-destination="replace">6.10. Pull-Down Resistor</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_10"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="6_11" show-destination="replace">6.11. Not Connected</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="6_11"/></fo:block><fo:block>7. Plexers</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="7_1" show-destination="replace">7.1. Multiplexer</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="7_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="7_2" show-destination="replace">7.2. Demultiplexer</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="7_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="7_3" show-destination="replace">7.3. Decoder</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="7_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="7_4" show-destination="replace">7.4. Bit Selector</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="7_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="7_5" show-destination="replace">7.5. Priority Encoder</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="7_5"/></fo:block><fo:block>8. Flip-Flops</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_1" show-destination="replace">8.1. RS-Flip-flop</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_2" show-destination="replace">8.2. RS-Flip-flop, clocked</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_3" show-destination="replace">8.3. JK-Flip-flop</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_4" show-destination="replace">8.4. D-Flip-flop</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_5" show-destination="replace">8.5. T-Flip-Flop</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_6" show-destination="replace">8.6. JK-Flip-flop, asynchronous</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_7" show-destination="replace">8.7. D-Flip-flop, asynchronous</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="8_8" show-destination="replace">8.8. Monoflop</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="8_8"/></fo:block><fo:block>9. Memory - RAM</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_1" show-destination="replace">9.1. RAM, separated Ports</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_2" show-destination="replace">9.2. Block-RAM, separated ports</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_3" show-destination="replace">9.3. RAM, bidirectional Port</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_4" show-destination="replace">9.4. RAM, Chip Select</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_5" show-destination="replace">9.5. Register File</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_6" show-destination="replace">9.6. RAM, Dual Port</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_7" show-destination="replace">9.7. RAM, async.</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="9_8" show-destination="replace">9.8. Graphic RAM</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="9_8"/></fo:block><fo:block>10. Memory - EEPROM</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="10_1" show-destination="replace">10.1. EEPROM</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="10_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="10_2" show-destination="replace">10.2. EEPROM, separated Ports</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="10_2"/></fo:block><fo:block>11. Memory</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="11_1" show-destination="replace">11.1. Register</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="11_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="11_2" show-destination="replace">11.2. ROM</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="11_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="11_3" show-destination="replace">11.3. ROM dual port</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="11_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="11_4" show-destination="replace">11.4. Counter</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="11_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="11_5" show-destination="replace">11.5. Counter with preset</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="11_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="11_6" show-destination="replace">11.6. Random Number Generator</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="11_6"/></fo:block><fo:block>12. Arithmetic</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_1" show-destination="replace">12.1. Adder</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_2" show-destination="replace">12.2. Subtract</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_3" show-destination="replace">12.3. Multiply</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_4" show-destination="replace">12.4. Division</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_5" show-destination="replace">12.5. Barrel shifter</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_6" show-destination="replace">12.6. Comparator</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_7" show-destination="replace">12.7. Negation</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_8" show-destination="replace">12.8. Sign extender</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_8"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="12_9" show-destination="replace">12.9. Bit counter</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="12_9"/></fo:block><fo:block>13. Switches</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_1" show-destination="replace">13.1. Switch</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_2" show-destination="replace">13.2. Double Throw Switch</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_3" show-destination="replace">13.3. Relay</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_4" show-destination="replace">13.4. Double Throw Relay</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_5" show-destination="replace">13.5. P-Channel FET</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_6" show-destination="replace">13.6. N-Channel FET</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_6"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_7" show-destination="replace">13.7. Fuse</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_7"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_8" show-destination="replace">13.8. Diode to VDD</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_8"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_9" show-destination="replace">13.9. Diode to Ground</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_9"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_10" show-destination="replace">13.10. P-Channel floating gate FET</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_10"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_11" show-destination="replace">13.11. N-Channel floating gate FET</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_11"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="13_12" show-destination="replace">13.12. Transmission-Gate</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="13_12"/></fo:block><fo:block>14. Misc.</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="14_1" show-destination="replace">14.1. Test case</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="14_1"/></fo:block><fo:block>15. Misc. - Decoration</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="15_1" show-destination="replace">15.1. Text</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="15_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="15_2" show-destination="replace">15.2. Rectangle</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="15_2"/></fo:block><fo:block>16. Misc. - Generic</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="16_1" show-destination="replace">16.1. Generic Initialization</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="16_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="16_2" show-destination="replace">16.2. Code</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="16_2"/></fo:block><fo:block>17. Misc. - VHDL/Verilog</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="17_1" show-destination="replace">17.1. External</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="17_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="17_2" show-destination="replace">17.2. External File</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="17_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="17_3" show-destination="replace">17.3. Pin Control</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="17_3"/></fo:block><fo:block>18. Misc.</fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="18_1" show-destination="replace">18.1. Power</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="18_1"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="18_2" show-destination="replace">18.2. Bidirectional Splitter</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="18_2"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="18_3" show-destination="replace">18.3. Reset</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="18_3"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="18_4" show-destination="replace">18.4. Break</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="18_4"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="18_5" show-destination="replace">18.5. Stop</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="18_5"/></fo:block><fo:block text-align-last="justify" margin-left="3mm"><fo:basic-link internal-destination="18_6" show-destination="replace">18.6. Asynchronous Timing</fo:basic-link> <fo:leader leader-pattern="dots"/><fo:page-number-citation ref-id="18_6"/></fo:block><fo:block font-weight="bold" margin-bottom="2mm" margin-top="2mm"><fo:basic-link internal-destination="chap_library" show-destination="replace">
							E
							<fo:inline padding-left="2mm">Library</fo:inline></fo:basic-link></fo:block><fo:block page-break-before="always"/><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm">
						A
						<fo:inline padding-left="2mm">General</fo:inline></fo:block>
    <fo:block id="chap_2" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">1. Digital</fo:block>
        <fo:block id="chap_1_1" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">1.1. Introduction</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Digital is a simple simulator used to simulate digital circuits. The logic gates are connected
                to each other by wires and the behavior of the overall circuit can be simulated.
                The user can interact with the simulation by either pressing buttons or setting
                values to the inputs of the circuit.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                In this way, most of the basic circuits used in digital electronics can be built and simulated.
                In the folder <fo:inline font-style="italic">examples</fo:inline>, users can browse for examples that includes a functional
                16-bit single-cycle Harvard processor.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                The simulator has two modes of operation: Editing and Simulation mode.
                In the editing mode, modifications to the circuit can be performed. Users can add or connect components.
                In this mode, simulation is disabled.
                The simulation mode is activated by pressing the <fo:inline font-style="italic">Start</fo:inline> button in the toolbar.
                While starting the simulation the circuit is checked for consistency.
                If there are errors in the circuit an appropriate message is shown and
                the affected components or wires are highlighted. If the circuit is error free, the simulation is
                enabled. Now you can interact with the running simulation.
                In the simulation mode it is not possible to modify the circuit. To do so you have to activate the
                editing mode again by stopping the simulation.
            </fo:block>
        
        <fo:block id="chap_2_1" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">1.2. First Steps</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr00.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                As a first example, a circuit is to be constructed with an Exclusive-Or gate.
                From the main window, the <fo:inline font-style="italic">Components</fo:inline> menu allows you to select the various components.
                Then they are placed on the drawing panel. This process can be canceled by pressing the ESC key at any
                time. Start by selecting an input component.
                This can later be controlled interactively by using the mouse.
            <fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr01.png')" width="100%" content-width="15cm"/></fo:block></fo:block>
            
                After selection, the first input can be placed on the drawing panel.
                The red dot on the input component symbol is a connection point between the component and a wire, which will be
                connected later on.
                The red color indicates an output. This means that the port defines a signal value or can drive a wire.
            
            <fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr02.png')" width="100%" content-width="15cm"/></fo:block></fo:block>
            
                In the same way, a second input is added. It is best to place it directly below the first input.
            <fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr03.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                After adding the inputs, the Exclusive-Or gate is selected. This gate represents the actual logical
                function.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr04.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                This gate can now also be added to the circuit. It is best to place it in a way that the subsequent
                wiring is made as simple as possible. The blue dots indicate the input terminals of the gate.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr05.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Now, select an output which could be used to display a signal state or to later pass signals to
                an embedding circuit.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr06.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                This is placed in a way that it can be wired easily.
                The output has a blue dot, which indicates an input terminal.
                Here you can feed in the value which is then exported.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr07.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                After all components are selected and in place, use the mouse to wire a connection between the blue and
                red dots. Make sure that exactly one red dot is connected to any number of blue dots.
                Only the usage of three-state outputs makes it possible to deviate from this rule and to interconnect
                several red dots.
                If all wires have been drawn, the circuit is complete.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr08.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Interaction with the circuit is possible when simulation is started.
                This is done by clicking on the play button located in the toolbar.
                After starting the simulation, the color of the wires changes and the
                inputs and outputs are now filled. Bright green indicates a logical '1' and dark green a logical '0'.
                In the figure above, all wires have a '0' value.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr09.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                By clicking with the mouse, the inputs can be switched. Since the simulation is now active, the
                output changes according to the current input states. The circuit behaves like an
                Exclusive-Or gate as expected .
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr10.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                To further process the circuit, the simulation must first be stopped. The easiest way to do this is
                with the Stop button in the tool bar. Clicking on a component with the right mouse button
                (control-click on macOS) opens a dialog which shows the component's properties. The label 'A' can
                be defined for the first input via this dialog.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr11.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                In the same way, the labels for the remaining inputs and outputs can be defined. The menu item
                <fo:inline font-style="italic">Analysis</fo:inline> also contains a menu item <fo:inline font-style="italic">Analysis</fo:inline>. This function performs an analysis of
                the current circuit. However, this is only possible if all inputs and outputs are labeled properly.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr12.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                The truth table of the simulated circuit appears in a new window. Below the table you can find the
                algebraic expression associated with the circuit. If there are several possible algebraic
                expressions, a separate window will open, showing all possible expressions.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr13.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                The table dialog has the menu entry <fo:inline font-style="italic">K-Map</fo:inline> in its main menu. This allows to display the truth
                table in the form of a K-map.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr14.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                At the top of this dialog there is a drop-down list which allows the selection of the desired
                expression in the K-map. In this way you can, for example, illustrate how several equivalent
                algebraic expressions can result. However, in this example, there is only one minimal expression.
                The truth table can also be modified by clicking the K-map.
            </fo:block>
        
        <fo:block id="chap_3_1" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">1.3. Wires</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                All components must be connected via wires. It is not possible to connect two components
                by placing them directly next to each other.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                In addition, there are only connections between an endpoint of a wire and a component.
                If a pin of a component is placed in the middle of a wire, no connection is made between the component
                and the wire.
                Therefore, a wire must actually terminate at each pin which is to be connected.
                Even if the tunnel component is used, there must be a wire between the pin and the tunnel element.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                The component needs to be selected using the rectangular selection tool in order to be moved
                along with the connected wires. For moving a component without the connected wires,
                select the component using a mouse click.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                With CTRL-Click a single wire section can be selected to move or delete it.
                If the D key is pressed while drawing a wire, a diagonal wire can be drawn.
                The key S allows the splitting of a line segment into two segments.
            </fo:block>
        
        <fo:block id="chap_4_1" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">1.4. Hierarchical Design</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                If a complex circuit is built up, this can quickly become very confusing. To keep track here,
                the different parts of a circuit can be stored in different files. This mechanism also makes it
                possible to use a subcircuit, which has been created once, several times in a further circuit.
                This approach also offers the advantage that the files can be stored independently of each other in a
                version control system and changes can be tracked.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr20.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                As an example, consider a 4-bit adder: First, we built a simple half-adder. This consists of an
                XOR gate and an AND gate. The sum of the two bits 'A' and 'B' is given to the outputs 'S' and 'C'.
                This circuit is stored in the file <fo:inline font-style="italic">halfAdder.dig</fo:inline>.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr21.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                From two half adders a full adder can now be built. To do this, create a new empty file and save the
                empty file as <fo:inline font-style="italic">fullAdder.dig</fo:inline> in the same folder as the half adder. Then the
                half adder can be added to the new circuit via the <fo:inline font-style="italic">Components</fo:inline><fo:inline font-family="ZapfDingbats" padding-left="2pt">→</fo:inline><fo:inline font-style="italic">Custom</fo:inline> menu.
                The order of the pins at the package of the half-adder can be rearranged from the half adder in the
                menu <fo:inline font-style="italic">Edit</fo:inline><fo:inline font-family="ZapfDingbats" padding-left="2pt">→</fo:inline><fo:inline font-style="italic">Order inputs</fo:inline> or <fo:inline font-style="italic">Edit</fo:inline><fo:inline font-family="ZapfDingbats" padding-left="2pt">→</fo:inline><fo:inline font-style="italic">Order outputs</fo:inline>.
                The full adder adds the three bits 'A', 'B' and 'Ci' and gives the sum to the outputs 'S' and 'Co'.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr22.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                In order to check the correct function of the full adder, a test case should be added. In the test case,
                the truth table is stored, which should fulfill the circuit. In this way it can be automatically
                checked whether this is the case.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr23.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                The tests can be executed via the test case editor or the test button in the toolbar.
                The table cells highlighted in green indicate that the output of the circuit matches
                the truth table given in the test case.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr24.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Now the full adders can be put together to form a so-called ripple-carry adder.
                In this case, the carry output of an addition is forwarded as a carry input to the addition of the
                next higher-order bit, just as is usual in pencil-and-paper addition.
                This 4-bit adder should be tested for correct function. For this purpose a test case was inserted.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify"><fo:block margin-bottom="2mm" margin-top="1mm" keep-together.within-page="always"><fo:block margin-bottom="1mm" text-align="center"><fo:external-graphic src="url('file:/C:/Digital-0.29/src/test/resources/docu/images/en/scr25.png')" width="100%" content-width="15cm"/></fo:block></fo:block></fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                This test case performs a 100% test, which is possible only with relatively simple circuits: all
                possible 512 input combinations are applied to the circuit, and it is checked whether the output
                of the circuit is correct.
                The first line lists the input and output signals. Below this, the input values to be applied and
                the output values to be checked are specified in a row, as in a truth table.
                In this example, however, 512 lines are required. Entering this would be a tedious and error-prone task.
                It is easier and more reliable to automatically generate the required lines.
                For this purpose, the variables <fo:inline font-style="italic">A</fo:inline> and <fo:inline font-style="italic">B</fo:inline> are each traversed
                from 0 to 15. The respective values of <fo:inline font-style="italic">A</fo:inline> and <fo:inline font-style="italic">B</fo:inline> are then assigned to inputs 'A[n]' and 'B[n]'.
                Then it is checked whether the circuit outputs the value <fo:inline font-style="italic">A+B</fo:inline>. Then it is checked again with
                the carry bit set, in which case <fo:inline font-style="italic">A+B+1</fo:inline> must result.
                The details of the test syntax are provided by the help dialog.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                If a circuit is embedded in an other circuit, only the file name of the subcircuit is stored in a
                circuit, not the embedded circuit itself.
                The corresponding files of
                the embedded subcircuits must therefore be found in the file system at runtime of the simulation.
                In order to support the various work methods of the users as best as possible and still to avoid a
                complex administration of import paths, etc., a somewhat unusual import strategy is implemented.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Only the file names of the embedded circuits are stored in a circuits file, not the full path.
                If a file needs to be opened, all subfolders are searched for a file of the corresponding name.
                If a suitable file is found, it is imported. This process only depends on the file name of the file to
                be read, not on its path. Correspondingly, an error message is generated if there are several files of
                the same name in different subfolders, since ambiguities then arise.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                A suitable project structure therefore looks as follows: The root circuit is located in a separate
                folder.
                All imported circuits must be in the same folder or subfolders. All circuits must have different names,
                so it must not happen that there are circuits of the same name in different folders.
            </fo:block>
        
    
    <fo:block id="chap_4" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">2. Simulation</fo:block>
        <fo:block id="chap_1_2" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">2.1. Propagation Delay</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                During the simulation every logic gate has a propagation delay. Every component found in the library
                has the same propagation delay regardless of its complexity.
                The AND gate thus has the same propagation delay as the multiplier.
                The only exceptions are diodes, switches and splitters which are used to create data buses.
                These components have no propagation delay at all.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                If it's necessary to simulate a gate - e.g. the multiplier - with a longer propagation delay, a delay
                gate must be inserted in the circuit right behind the output of the multiplier.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                If a circuit is included in another parent circuit, the included circuit keeps its timing behaviour.
                So if you include a complex circuit which has a large propagation delay because the input signals
                has to pass three gates until it reaches the output, this behaviour is conserved while including this
                circuit.
                There are no additional delays introduced as a result of including a circuit. If not all outputs of a
                circuit have
                the same propagation delay, then this is also the case if it is included in a parent circuit.
                In general, including a circuit into an other circuit does not modify its timing behaviour at all. An
                included circuit behaves exactly the same way as if all components had been inserted at the same circuit
                level.
            </fo:block>
        
    
    <fo:block id="chap_6" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">3. Analysis</fo:block>
        <fo:block id="chap_1_3" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">3.1. Circuit Analysis and Synthesis</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                A circuit can be analyzed via the menu entry <fo:inline font-style="italic">Analysis</fo:inline>. A truth table is generated for purely
                combinatorial circuits. This truth table can be edited as desired.
                A new circuit can be generated from this truth table after editing.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                In addition to purely combinatorial circuits, it is also possible to analyze or generate sequential
                circuits.
                Instead of a simple truth table a so-called state transition table is created.
                Each flip-flop thereby appears on the input side and the output side of the state transition table.
            In this table, on the right-hand side, you can find the next state, which will
            occur after the next clock signal. This next state depends on the current state of the flip-flops as found
            at the left-hand side of the table.
            For an analysis to be possible, the flip-flops must be named.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            The following naming convention applies: The following next state of a bit on the right side of the table
            is indicated by a lowercase 'n+1'. The corresponding current state is indicated by an appended 'n'.
            If there is a state variable 'A', 'An' indicates the current state and 'An+1' indicates the next state.
            If, in the truth table on the left and right side, signals are present, which correspond to this pattern
            it is assumed that the table is a state transition table, and a sequential circuit is generated instead of
            a combinatorial circuit.
        </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                It should be noted that the circuit to be analyzed may contain only purely combinatorial elements in
                addition to the built-in D and JK flip-flops. If a flip-flop is e.g. made from Nor gates, this
                circuit is not recognized as a flip-flop and therefore it is not possible to analyse such a circuit.
            </fo:block>
        
        <fo:block id="chap_2_3" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">3.2. Expression</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Via the menu item <fo:inline font-style="italic">Expression</fo:inline> it is possible to enter a boolean function from which a
                circuit can then be generated.
            </fo:block>
        
        <fo:block id="chap_3_3" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">3.3. State charts</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                An editor for state charts is available via the menu item <fo:inline font-style="italic">Finite State Machine</fo:inline>.
                It allows the graphical creation of state machines by drawing states and state transitions.
                Thereby different outputs can be set in the different states.
                By providing transitions with conditions, input signals can be generated.
                By setting output values at transitions, Mealy automata can also be defined.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                The state machine defined in this way can then be automatically transferred to a state transition table,
                from which, in a further step, a circuit implementing the initial state machine can be generated.
                If the simulation of this circuit is then started, the current state can also be followed in the
                state chart.
            </fo:block>
        
    
    <fo:block id="chap_8" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">4. Hardware</fo:block>
        <fo:block id="chap_1_4" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">4.1. GAL16v8 and GAL22v10</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                In the circuit generation menu in the truth table there are also functions to generate so-called
                JEDEC files. This is a special file format that describes the fuse map of a PLD.
                This JEDEC file can be written into a corresponding PLD using a special programmer.
                At the moment, circuits of the type <fo:inline font-style="italic">GAL16v8</fo:inline> and <fo:inline font-style="italic">GAL22v10</fo:inline> or fuse map compatible
                devices are supported.
            </fo:block>
        
        <fo:block id="chap_2_4" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">4.2. ATF150xAS</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                The chips in the
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/cpld-atf15xx-family">
                    <fo:inline font-style="italic">ATF150x</fo:inline>
                </fo:basic-link>
                family are simple CPLDs with up to 128 macrocells. They are available in a
                PLCC package, which makes them suitable for laboratory exercises: If an IC is destroyed during exercises,
                it can simply be replaced. In addition, with the
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/hardware/atdh1150usb">
                    <fo:inline font-style="italic">ATDH1150USB</fo:inline>
                </fo:basic-link>
                an easy to use, low-cost programmer is available. This programmer is able to program the
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/cpld-atf15xx-family">
                    <fo:inline font-style="italic">ATF150x</fo:inline>
                </fo:basic-link>
                chips in system using a JTAG interface.
                A suitable evaluation board
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/DevelopmentTools/ProductDetails.aspx?PartNO=ATF15XX-DK3-U">
                    (<fo:inline font-style="italic">ATF15XX-DK3-U</fo:inline>)
                </fo:basic-link>
                is also available.
                The software
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/atmisp">
                    <fo:inline font-style="italic">ATMISP</fo:inline>
                </fo:basic-link>, 
                which is available on the ATMEL/Microchip website, is required for programming the chips.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Unfortunately, the fuse map details are not publicly available so that no suitable fitter for this chip
                can be integrated in Digital, as is possible with the <fo:inline font-style="italic">GAL16v8</fo:inline> and <fo:inline font-style="italic">GAL22v10</fo:inline> chips.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Therefore, the fitters <fo:inline font-style="italic">fit150[x].exe</fo:inline> provided by ATMEL must be used. These programs create a
                <fo:inline font-style="italic">JEDEC</fo:inline> file from a suitable <fo:inline font-style="italic">TT2</fo:inline> file which can then be programmed on the chip. Digital
                starts the fitter automatically every time a <fo:inline font-style="italic">TT2</fo:inline> file is created. For this purpose, the path to the
                <fo:inline font-style="italic">fit150[n].exe</fo:inline> fitters must be specified in the settings.
                The created <fo:inline font-style="italic">JEDEC</fo:inline> file can then be opened and programmed directly with
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/atmisp">
                    <fo:inline font-style="italic">ATMISP</fo:inline>
                </fo:basic-link>.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                For legal reasons the fitter <fo:inline font-style="italic">fit1502.exe</fo:inline> can not be distributed with Digital. However, it can be
                found in the folder <fo:inline font-style="italic">WinCupl\Fitters</fo:inline> after installing
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/wincupl">
                    <fo:inline font-style="italic">WinCupl</fo:inline>
                </fo:basic-link>.
                <fo:basic-link show-destination="new" external-destination="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/wincupl">
                    <fo:inline font-style="italic">WinCupl</fo:inline>
                </fo:basic-link>
                is available on the ATMEL/Microchip website.
                On Linux systems, the fitters can also be executed by Digital if <fo:inline font-style="italic">wine</fo:inline> is installed.
            </fo:block>
        
        <fo:block id="chap_3_4" font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">4.3. Export to VHDL or Verilog</fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                A circuit can be exported to VHDL or Verilog. A file is generated which contains the complete description
                of the circuit. The generated VHDL code was tested with
                <fo:basic-link show-destination="new" external-destination="https://www.xilinx.com/products/design-tools/vivado.html">Xilinx Vivado</fo:basic-link>
                and the open source VHDL simulator <fo:basic-link show-destination="new" external-destination="http://ghdl.free.fr/">ghdl</fo:basic-link>.
                The Verilog code is tested with the Verilog simulator <fo:basic-link show-destination="new" external-destination="http://iverilog.icarus.com/">Icarus Verilog</fo:basic-link>.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                If a circuit contains test cases, the test data is used to generate a HDL test bench. This can be used
                to check the correct function of the circuit in a HDL simulation.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                Additional files which are needed by special boards can be created. At present only the
                <fo:basic-link show-destination="new" external-destination="https://reference.digilentinc.com/reference/programmable-logic/basys-3/start">BASYS3</fo:basic-link>
                board and the Mimas boards <fo:basic-link show-destination="new" external-destination="https://numato.com/product/mimas-spartan-6-fpga-development-board">Mimas</fo:basic-link>
                and <fo:basic-link show-destination="new" external-destination="https://numato.com/product/mimas-v2-spartan-6-fpga-development-board-with-ddr-sdram">Mimas V2</fo:basic-link>
                are supported.
                A constraints file is created, which contains the assignment of the pins. The description of the pins can
                be found in the boards data sheet, and must be entered as a pin number for the inputs and outputs.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                For a BASYS3 board, if the circuit clock frequency is low, a frequency divider is integrated into the HDL
                code to divide the board clock accordingly.
                If the clock frequency selected in the circuit exceeds 4.7MHz, the MMCM unit of the
                Artix-7 is used for clock generation.
                This ensures that the FPGA resources provided for the clock distribution are used.
                This allows the included example processor to run at 20MHz, and if you can do without the
                multiplier, 30HMz is also possible.
            </fo:block>
            
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                If a circuit is to run on a BASYS3 board, a new project can be created in Vivado.
                The generated VHDL file and the constraints file must be added to the project.
                Once the project has been created, the bitstream can be generated and the Hardware-Manager can be used
                to program a BASYS3 board.
            </fo:block>
            <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
                In order to create the required constraints file in addition to the HDL file, the corresponding board
                must be configured in the settings. In the field "Toolchain Configuration" the corresponding XML file
                can be selected.
                The available configurations can be found in the folder <fo:inline font-style="italic">examples/hdl</fo:inline> and have the file
                extension <fo:inline font-style="italic">.config</fo:inline>.
                If the configuration was successfully integrated, a further menu appears, which makes the board
                specific functions accessible.
            </fo:block>
        
    
    <fo:block id="chap_10" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">5. Custom Shapes</fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            Although Digital has some options that determine the appearance of a circuit when it is embedded in
            another, in some cases it may be useful to use a very special shape for a subcircuit. An example is
            the representation of the ALU in the processor included in the examples. This chapter explains how to
            define such a special shape for a circuit.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            Digital does not provide an editor for creating a special shape. Instead, a small detour is required
            for creating circuit shapes: First, the circuit which is to be represented by a special shape is opened.
            Then an SVG template is created for this circuit. In this template, the circuit is represented by a
            simple rectangle. It also contains all the pins of the circuit, represented by blue (inputs) and
            red (outputs) circles. To see which circle belongs to which pin, you can look at the ID of the
            circle in the object properties. This ID has the form <fo:inline font-style="italic">pin:[name]</fo:inline> or <fo:inline font-style="italic">pin+:[name]</fo:inline>.
            In the latter variant, the pin is provided with a label if reimported to digital.
            If you do not want such a label, the <fo:inline font-style="italic">+</fo:inline> can be removed.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            This SVG file can now be edited. The most suitable is the open source program
            <fo:basic-link show-destination="new" external-destination="https://inkscape.org/en/">Inkscape</fo:basic-link> which is available for free.
            The pins can be moved freely, but are moved to the next grid point during the reimport.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            If existing SVG files are to be used, it is easiest to open the created template and paste the
            existing graphic into the template via Copy&amp;Paste.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            If the file was saved, it can be imported with Digital. The file is read in and all necessary
            information is extracted and stored in the circuit. For further use of the circuit, the SVG
            file is no longer required.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            A final remark: SVG is a very powerful and flexible file format.
            It can be used to describe extremely complex graphics. The Digital importer is not able to import all
            possible SVG files without errors. If a file can not be imported, or does not appear as expected,
            some experimentation may be required before the desired result is achieved.
        </fo:block>
    
    <fo:block id="chap_12" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">6. Generic Circuits</fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            It happens that a subcircuit has been created, and is to be used in different variants.
            For example, you can imagine a special counter that is needed for different bit widths.
            If one would create a subcircuit for 4, 5 and 6 bits each, the maintenance of the circuit
            would be difficult in the future, since one must always work on several subcircuits, which are
            identical except for one parameter, the bit width.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            To prevent this, a generic subcircuit which can be parameterized can be created.
            For this purpose, the checkbox "Circuit is generic" must be set in the circuit specific settings.
            Then the parameter dialog of each component in that circuit contains the additional field "generic
            parameterization". In this field program code can be entered, which can change the parameters of the
            component. Each parameter has a name and can be modified as an attribute of the field <fo:inline font-style="italic">this</fo:inline>.
            The names of the parameters can be found in the help dialog of the component.
            If you want to change the bit width of an adder, the line <fo:inline font-style="italic">this.Bits=1;</fo:inline> can be used.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            In this way, however, it is not yet possible to create a circuit that can be parameterized.
            It is still necessary to access parameters that are set when the circuit is used.
            This is done via the field "args". If you want to set the bit width from outside, you can write:
            <fo:inline font-style="italic">this.Bits=args.bitWidth;</fo:inline>. The name of the argument - here <fo:inline font-style="italic">bitWidth</fo:inline> is arbitrary.
            If such a subcircuit is used, this argument must be set.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            If the circuit is used and the parameter dialog of the embedded circuit is opened, it also has a
            field "generic parameterization". Here the bit width to be used can be set with the instruction
            <fo:inline font-style="italic">bitWidth:=5;</fo:inline>.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            If a generic circuit is to be started directly, this is not possible straight away, since the required
            arguments are missing, which have to be specified when embedding the circuit. These missing arguments
            would lead to corresponding error messages.
            Therefore, to simplify the testing of the circuit, the <fo:inline font-style="italic">Generic Initialization</fo:inline> component can be
            added to the circuit. In this component you can set the arguments that would come from an embedding circuit.
            In this way, a generic circuit can also be simulated directly.
            If the circuit is embedded, this component is ignored.
            It is only needed for the direct start of the simulation.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            Under certain circumstances it may be useful not only to change the attributes of the components of a
            circuit, but to add completely new components and wires depending on the passed arguments.
            The <fo:inline font-style="italic">Code</fo:inline> component can be used for this purpose. If it is added to the circuit, the contained
            Code will be executed when the simulation is started.
            Here, a wire can be added using the <fo:inline font-style="italic">addWire([x1],[y1],[x2],[y2])</fo:inline> function, and using the function
            <fo:inline font-style="italic">addComponent([name],[x],[y])</fo:inline> a new component <fo:inline font-style="italic">[name]</fo:inline> can be added at the position ([x],[y]).
            The return value of the <fo:inline font-style="italic">addComponent([Name],[x],[y])</fo:inline> function allows to set the parameters of the
            component.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            The example circuit <fo:inline font-style="italic">examples/generic/modify/Conway/GenericConway.dig</fo:inline> shows how a more complex
            circuit can be assembled in this way.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            Another way to create a circuit is recursion: it is possible, depending on the arguments, to replace one
            circuit by another. For this purpose the function <fo:inline font-style="italic">setCircuit([Name])</fo:inline> is available.
            If it is called in the definition part of a subcircuit, the circuit to be inserted can be replaced
            by another circuit. This allows the recursive definition of a circuit. As in other programming
            languages, a suitable termination condition must be ensured.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            The <fo:inline font-style="italic">examples/generic</fo:inline> folder contains an example of a Gray code counter whose bit width can
            be configured. Here a Gray code counter is constructed by recursively adding further bits to an
            initial circuit until the required number of bits of the counter is reached.
        </fo:block>
    
    <fo:block id="chap_14" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">7. Script-controlled testing</fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            If students are to complete exercises with Digital, it can be helpful if the circuits submitted by the
            students can be checked in an automatic process. To perform this check, Digital can be started
            from the command line. The call is done as follows:
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            <fo:block text-align="left" font-family="Courier">
                java -cp Digital.jar CLI test [file to test] [-tests [optional file with
                test cases]]
            </fo:block>
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            If only the file to be tested is specified, the test cases in that file are executed. In this way, the
            test cases created by the students themselves can be executed.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            If a second file name is specified, the test cases are taken from the second file and the first circuit
            is checked with these test cases. The second file will therefore usually contain the sample solution
            whose test cases are complete and correct. The circuit contained in the second file is ignored.
            Only the test cases are taken from it.
        </fo:block>
        <fo:block margin-bottom="1mm" margin-top="1mm" hyphenate="true" text-align="justify">
            In order to test a submitted circuit against a sample solution, the signal names of the inputs and
            outputs in both circuits must match.
        </fo:block>
    
    <fo:block id="chap_16" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">8. Frequently asked Questions</fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">How to move a wire?</fo:block><fo:block margin-left="4mm">Select one of the end points with the rectangular selection. Then move this point using the mouse.
                You can also select a wire with CTRL + mouse button.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">How to delete a wire?</fo:block><fo:block margin-left="4mm">Select one of the end points and press <fo:inline font-style="italic">DEL</fo:inline> or click on the trashcan.
                You can also select a wire with CTRL + mouse button.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">How to move a component including all the connected wires?</fo:block><fo:block margin-left="4mm">Select the component with the rectangular selection. The selection must include the entire
                component.
                Then move the component including the wires using the mouse.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">There is a component not connected to a wire, even though the pins are on the wire.</fo:block><fo:block margin-left="4mm">A pin is only connected to a wire if the wire has an endpoint at the pin.</fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">If the names of the pins in a circuit are long, the names are no longer readable when
                the circuit is embedded. What can I do?</fo:block><fo:block margin-left="4mm">The width of the block can be increased using the menu item
                <fo:inline font-style="italic">Edit<fo:inline font-family="ZapfDingbats" padding-left="2pt">→</fo:inline>Circuit specific settings</fo:inline>.</fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">The pins in an embedded circuit have an non-optimal order. How can this be changed?</fo:block><fo:block margin-left="4mm">The sequence can be changed using the menu entry <fo:inline font-style="italic">Edit<fo:inline font-family="ZapfDingbats" padding-left="2pt">→</fo:inline>Order inputs</fo:inline> or
                <fo:inline font-style="italic">Edit<fo:inline font-family="ZapfDingbats" padding-left="2pt">→</fo:inline>Order outputs</fo:inline>.</fo:block></fo:block>

        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">When the simulation is started, a wire becomes gray. What does that mean?</fo:block><fo:block margin-left="4mm">The colors light green and dark green are used to represent high and low state.
                Gray means the wire is in high Z state.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">I have a truth table. How to calculate the minimized boolean equations?</fo:block><fo:block margin-left="4mm">In the menu <fo:inline font-style="italic">Analysis</fo:inline> select the entry <fo:inline font-style="italic">Synthesise</fo:inline>. Then enter the truth table.
                At the bottom of the window you can find the matching boolean equation. If you enter more than one
                dependent variable, a new window opens in which all boolean equations are shown.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">I have entered a truth table, but there is more than one boolean equation shown.
                Which of them is the correct one?
            </fo:block><fo:block margin-left="4mm">Minimizing a boolean equation can result in many equations describing the same function.
                Digital shows all of them and they all create the same truth table.
                There may be differences depending on the "don't cares" in the truth table.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">I have a truth table. How to create a circuit representing the truth table?</fo:block><fo:block margin-left="4mm">In the menu <fo:inline font-style="italic">Analysis</fo:inline> select the entry <fo:inline font-style="italic">Synthesise</fo:inline>. Then enter the truth table.
                You can edit the table using the <fo:inline font-style="italic">New</fo:inline> or <fo:inline font-style="italic">Edit</fo:inline> menus.
                In the menu <fo:inline font-style="italic">Create</fo:inline>, you can create a circuit using the <fo:inline font-style="italic">Circuit</fo:inline> item.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">How to edit a signal's name in the truth table?</fo:block><fo:block margin-left="4mm">Right click on the name in the table header to edit the name.</fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">I have a boolean equation. How to create a circuit?</fo:block><fo:block margin-left="4mm">In the menu <fo:inline font-style="italic">Analysis</fo:inline> select the entry <fo:inline font-style="italic">Expression</fo:inline>. Then enter the equation.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">How to create a truth table from a boolean equation?</fo:block><fo:block margin-left="4mm">In the menu <fo:inline font-style="italic">Analysis</fo:inline> select the entry <fo:inline font-style="italic">Expression</fo:inline>. Then enter the expression.
                Then create a circuit and in the menu <fo:inline font-style="italic">Analysis</fo:inline> use the entry <fo:inline font-style="italic">Analysis</fo:inline> to create the truth
                table.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">How to create a JEDEC file from a given circuit?</fo:block><fo:block margin-left="4mm">In the menu <fo:inline font-style="italic">Analysis</fo:inline> select the entry <fo:inline font-style="italic">Analysis</fo:inline>. Then in the menu <fo:inline font-style="italic">Create</fo:inline> in the
                new
                window choose the correct device in the sub menu <fo:inline font-style="italic">Device</fo:inline>.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">When creating a JEDEC file: How to assign a pin number to a certain signal?</fo:block><fo:block margin-left="4mm">At the corresponding inputs and outputs you can enter a pin number in the settings dialog of the
                pin.
            </fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">I have created a JEDEC file. How to program it to a <fo:inline font-style="italic">GAL16v8</fo:inline> or <fo:inline font-style="italic">GAL22v10</fo:inline>?
            </fo:block><fo:block margin-left="4mm">To program such a chip a special programmer hardware is necessary.</fo:block></fo:block>
        <fo:block keep-together.within-page="always"><fo:block margin-bottom="1mm" margin-top="3mm" font-weight="bold">I have created a circuit that I want to use in many other circuits.
                How can I do this without copying the file over and over again into the appropriate folders?
            </fo:block><fo:block margin-left="4mm">The circuit can be saved in the "lib" folder. Then it is available in all other circuits.
            </fo:block></fo:block>
    
    <fo:block id="chap_18" font-weight="bold" font-size="14pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid" page-break-before="always">9. Keyboard Shortcuts</fo:block>
        <fo:table width="100%" table-layout="fixed"><fo:table-column column-width="2.5cm" column-number="1"/><fo:table-column column-width="13cm" column-number="2"/><fo:table-body><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">Space</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Starts or stops the simulation.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">F6</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Opens the measurement table dialog.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">F7</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Run to Break.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">F8</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Execute test cases.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">C</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">A single clock step (Works only in a running simulation and only if there is a single
                clock component).
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">V</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Execute a single gate step.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">B</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Execute all single gate steps until the circuit has stabilized or,
                if a break component is present, until the break.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">F9</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Analysis of the circuit.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-A</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Select all.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-X</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Cuts the selected components to the clipboard.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-C</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Copys the selected components to the clipboard.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-V</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Inserts the components from the clipboard.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-D</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Duplicate the current selection without modifying the clipboard.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">R</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">While inserting this rotates the components.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">L</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Inserts the last inserted component again.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">T</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Inserts a new tunnel.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-N</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">New circuit.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-O</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Open circuit.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-S</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Save the circuit.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-Z</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Undo last modification.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL-Y</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Redo the last undone modification.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">P</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Programs a diode or a FGFET.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">D</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">While drawing a wire switches to the diagonal mode.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">F</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">While drawing a line flips the orientation.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">S</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Splits a single wire into two wires.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">ESC</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Abort the current action.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">Del</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Removes the selected components.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">Backspace</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Removes the selected components.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">+</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Increases the number of inputs at the component the mouse points to. If it is used with
                constants, the value is increased.
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">-</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Decreases the number of inputs at the component the mouse points to. If it is used with
                constants, the value is decreased.
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL +</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Zoom In.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">CTRL -</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Zoom Out.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">F1</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Fit to size.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell column-number="1"><fo:block margin-top="2mm"><fo:inline padding-right="2pt" padding-left="2pt" padding-bottom="1pt" padding-top="3pt" border-style="solid" border-width="1pt" font-weight="bold">F5</fo:inline></fo:block></fo:table-cell><fo:table-cell column-number="2"><fo:block margin-top="2mm">Show or hide the components tree view.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
    
<fo:block id="chap_settings" font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-before="always">
						B
						<fo:inline padding-left="2mm">Settings</fo:inline></fo:block><fo:block>The following describes the available settings of the simulator.</fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">Settings</fo:block><fo:block>The global settings of the simulator specify, among other         things, the language, the symbol form to be used or the paths of external tools.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use IEEE 91-1984 shapes</fo:block><fo:block margin-left="12mm">Use IEEE 91-1984 shapes instead of rectangular shapes</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Language</fo:block><fo:block margin-left="12mm">Language of the GUI. Will only take effect after a restart.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Format</fo:block><fo:block margin-left="12mm">Screen format of expressions.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color scheme</fo:block><fo:block margin-left="12mm">Color scheme</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">User Defined Colors</fo:block><fo:block margin-left="12mm">User Defined Colors</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Component tree view is visible at startup.</fo:block><fo:block margin-left="12mm">If set, the component tree view is enabled at startup.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show Grid</fo:block><fo:block margin-left="12mm">Shows a grid in the main window.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show the number of wires on a bus.</fo:block><fo:block margin-left="12mm">CAUTION: The value is only updated when the simulation starts.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">No tool tips for components on the main panel.</fo:block><fo:block margin-left="12mm">If set, no tool tips for the components on the main panel are displayed. Especially in a presentation, these tool tips can be very annoying.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wire tool tips</fo:block><fo:block margin-left="12mm">If set, lines are highlighted when the mouse hovers over them.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Library</fo:block><fo:block margin-left="12mm">Folder which contains the library with predefined sub circuits. Contains, for example, the components of the 74xx series. You also can add your own circuits by storing them at this location. It must be ensured that the names of all files in this folder and all subfolders are unique.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Java library</fo:block><fo:block margin-left="12mm">A jar file containing additional components implemented in Java.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">ATF15xx Fitter</fo:block><fo:block margin-left="12mm">Path to the fitter for the ATF15xx. Enter the directory which contains the fit15xx.exe files provided by Microchip (former ATMEL).</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">ATMISP</fo:block><fo:block margin-left="12mm">Path to the executable file ATMISP.exe. If set, the ATMISP software can be started automatically!</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">GHDL</fo:block><fo:block margin-left="12mm">Path to the executable ghdl file. Only necessary if you want to use ghdl to simulate components defined with VHDL.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">IVerilog</fo:block><fo:block margin-left="12mm">Path to the Icarus Verilog installation folder. Only necessary if you want to use iverilog to simulate components defined with Verilog.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Toolchain Configuration</fo:block><fo:block margin-left="12mm">Used to configurate an integration of a toolchain. Allows the start of external tools, e.g. to program an FPGA or similar.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Menus Font Size [%]</fo:block><fo:block margin-left="12mm">Size of the fonts used in the menu in percent of the default size.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use macOS mouse clicks.</fo:block><fo:block margin-left="12mm">Uses CTRL-click instead of right-click.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use Equals-Key</fo:block><fo:block margin-left="12mm">Use the equal key instead of the plus key. This is always useful if the plus character is not a primary key, but the second assignment of the equals character, e.g. for an American or French keyboard layout.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show dialog for automatic renaming of tunnels.</fo:block><fo:block margin-left="12mm">If set, a dialog for automatically renaming all tunnels of the same name is displayed after a tunnel has been renamed.</fo:block></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">Circuit specific settings</fo:block><fo:block>The circuit specific settings affect the behavior of the         currently open circuit.         For example, the shape that represents the circuit when it is embedded in other circuits.         These settings are stored together with the circuit.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Width</fo:block><fo:block margin-left="12mm">Width of symbol if this circuit is used as an component in an other circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Background color</fo:block><fo:block margin-left="12mm">Background color of the circuit when it is embedded in another circuit. Is not used for DIL packages.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Description</fo:block><fo:block margin-left="12mm">A short description of this element and its usage.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Oscillation detection</fo:block><fo:block margin-left="12mm">Number of gate propagation times at which a oscillation is detected if the circuit has not stabilized by then.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Modification locked</fo:block><fo:block margin-left="12mm">The circuit is locked. It is possible to configure diodes and FGF-FETs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Shape</fo:block><fo:block margin-left="12mm">The shape to be used for the representation of the circuit in an embedding circuit. In the "Simple" mode, the inputs are displayed on the left and the outputs on the right side of a simple rectangle. With "Layout", the position of the inputs and outputs and their orientation in the circuit determines the position of the pins. Here it is possible to have pins at the top or the bottom. When selecting "DIL-Chip", a DIL housing is used to display the circuit. The pin numbers of the inputs and outputs determine the position of the pins in this case.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Custom Shape</fo:block><fo:block margin-left="12mm">Import of a SVG file</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Height</fo:block><fo:block margin-left="12mm">Height of symbol if this circuit is used as an component in an other circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of DIL pins</fo:block><fo:block margin-left="12mm">Number of pins. A zero means that the number of pins is determined automatically.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Content of ROMs</fo:block><fo:block margin-left="12mm">Content of all used ROMs</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show measurement values at simulation start</fo:block><fo:block margin-left="12mm">When the simulation is started, a table with the measured values is shown.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show measurement graph at simulation start</fo:block><fo:block margin-left="12mm">When the simulation is started, a graph with the measured values is shown.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show measurement graph in single gate step mode at simulation start</fo:block><fo:block margin-left="12mm">When the simulation is started, a graph with the measured values in the gate step mode is shown. All gate changes are included in the graph.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Max number of steps to show</fo:block><fo:block margin-left="12mm">The maximal number of values stored. If the maximum number is reached, the oldest values are discarded.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Preload program memory at startup.</fo:block><fo:block margin-left="12mm">When simulating a processor that uses a RAM device as the program memory, it is difficult to start this processor because the RAM contents are always initialized with zeros at the start of the simulation. This setting allows loading data into the program memory at startup. The program memory in the simulation must be marked as such.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program file</fo:block><fo:block margin-left="12mm">File which should be loaded into the program memory at the start of the simulation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use big endian at import.</fo:block><fo:block margin-left="12mm">Use big endian byte order at import.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Skip in Verilog/VHDL export</fo:block><fo:block margin-left="12mm">Skips generating the internals of the circuit in Verilog/VHDL export. The references to the circuit are kept, making it possible to override the implementation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Circuit is generic</fo:block><fo:block margin-left="12mm">Allows to create a generic circuit.</fo:block></fo:block><fo:block id="chap_cli" font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-before="always">
						C
						<fo:inline padding-left="2mm">Command Line Interface</fo:inline></fo:block><fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
java -cp Digital.jar CLI<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
test -circ [String] [-tests [String]] [-allowMissingInputs] [-verbose]:<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
The first file name specifies the circuit to be tested.
        If a second file name is specified, the test cases are executed from this file.
        If no second file name is specified, the tests are executed from the first file.</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Options:<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
-circ [String(def: )]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Name of the file to be tested.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-tests [String(def: )]]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Name of a file with test cases.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-allowMissingInputs(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Allows the lack of inputs in the circuit which are
        defined in the test case. This can be useful if there are several possible solutions which may
        depend on different inputs.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-verbose(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
If set, the value table is output in case of an error.</fo:block>
</fo:block>
</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
svg -dig [String] [-svg [String]] [-ieee] [-LaTeX] [-pinsInMathMode] [-hideTest] [-noShapeFilling] [-smallIO] [-noPinMarker] [-thinnerLines] [-highContrast] [-monochrome]:<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Can be used to create an SVG file from a circuit.</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Options:<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
-dig [String(def: )]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
The file name of the circuit.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-svg [String(def: )]]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
The name of the SVG file to be written.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-ieee(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Use the IEEE symbols.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-LaTeX(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Text is inserted in LaTeX notation. Inkscape is required for further processing.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-pinsInMathMode(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
For pin labels, use math mode even if no indexes are contained.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-hideTest(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Hide Test Cases</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-noShapeFilling(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Polygons are not filled.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-smallIO(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Inputs and outputs are represented as small circles.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-noPinMarker(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
The blue and red pin markers on the symbols are omitted.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-thinnerLines(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
If set, the lines are drawn slightly thinner.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-highContrast(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
The wires and the text of the pins are displayed in black.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-monochrome(def: false)]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Only gray colors are used.</fo:block>
</fo:block>
</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
stats -dig [String] [-csv [String]]:<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Creates a CSV file which contains the circuit statistics.
        All components used are listed in the CSV file.</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Options:<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
-dig [String(def: )]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
File name of the circuit.</fo:block>
</fo:block>
<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
[-csv [String(def: )]]<fo:block margin-bottom="2mm" margin-top="2mm" start-indent="2mm" margin-left="4mm">
Name of the CSV file to be created.
        If this option is missing, the table is written to stdout.</fo:block>
</fo:block>
</fo:block>
</fo:block>
</fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" page-break-before="always">
						D
						<fo:inline padding-left="2mm">Components</fo:inline></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">1.
			Logic</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_1" src="url('file:/C:/Digital-0.29/target/docu/img/And_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.1. And</fo:block></fo:block><fo:block>Binary AND gate. Returns high only if all inputs are also set high. It is also possible to use buses with several bits as inputs and output. In this case, a bitwise AND is executed. This means that the lowest bits of all inputs are connected with AND and is output as the lowest bit at the output. The same happens with bit 1, bit 2 and so on. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">In_1</fo:block><fo:block margin-left="12mm">The 1. input value for the logic operation.</fo:block><fo:block margin-left="6mm">In_2</fo:block><fo:block margin-left="12mm">The 2. input value for the logic operation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the result of the logic operation.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Inputs</fo:block><fo:block margin-left="12mm">The Number of Inputs used. Every input needs to be connected.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wide Shape</fo:block><fo:block margin-left="12mm">Uses a wider shape to visualize the gate.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_2" src="url('file:/C:/Digital-0.29/target/docu/img/NAnd_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.2. NAnd</fo:block></fo:block><fo:block>A combination of AND and NOT. Returns 0 only if all inputs are set to 1. If one of the inputs is set to 0 the output is set to 1. It is also possible to use buses with several bits per input. In this case, the operation is applied to each bit of the inputs. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">In_1</fo:block><fo:block margin-left="12mm">The 1. input value for the logic operation.</fo:block><fo:block margin-left="6mm">In_2</fo:block><fo:block margin-left="12mm">The 2. input value for the logic operation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the result of the logic operation.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Inputs</fo:block><fo:block margin-left="12mm">The Number of Inputs used. Every input needs to be connected.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wide Shape</fo:block><fo:block margin-left="12mm">Uses a wider shape to visualize the gate.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_3" src="url('file:/C:/Digital-0.29/target/docu/img/Or_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.3. Or</fo:block></fo:block><fo:block>Binary OR gate. Returns a 1 if one of the inputs is set to 1. If all inputs are set to 0 the output is also set to 0. It is also possible to use buses with several bits as inputs and output. In this case, a bitwise OR is executed. This means that the lowest bits of all inputs are connected with OR and is output as the lowest bit at the output. The same happens with bit 1, bit 2 and so on. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">In_1</fo:block><fo:block margin-left="12mm">The 1. input value for the logic operation.</fo:block><fo:block margin-left="6mm">In_2</fo:block><fo:block margin-left="12mm">The 2. input value for the logic operation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the result of the logic operation.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Inputs</fo:block><fo:block margin-left="12mm">The Number of Inputs used. Every input needs to be connected.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wide Shape</fo:block><fo:block margin-left="12mm">Uses a wider shape to visualize the gate.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_4" src="url('file:/C:/Digital-0.29/target/docu/img/NOr_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.4. NOr</fo:block></fo:block><fo:block>A combination of OR and NOT. Returns a 0 if one of the inputs is set to 1. If all inputs are set to 0 the output is also set to 1. It is also possible to use buses with several bits per input. In this case, the operation is applied to each bit of the inputs. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">In_1</fo:block><fo:block margin-left="12mm">The 1. input value for the logic operation.</fo:block><fo:block margin-left="6mm">In_2</fo:block><fo:block margin-left="12mm">The 2. input value for the logic operation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the result of the logic operation.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Inputs</fo:block><fo:block margin-left="12mm">The Number of Inputs used. Every input needs to be connected.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wide Shape</fo:block><fo:block margin-left="12mm">Uses a wider shape to visualize the gate.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_5" src="url('file:/C:/Digital-0.29/target/docu/img/XOr_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.5. XOr</fo:block></fo:block><fo:block>If two inputs are used, the output is 0 if both input bits are equal. Otherwise the output in set to 1. If more than two inputs are used, it behaves like cascaded XOR gates ( A XOR B XOR C = (A XOR B) XOR C ). It is also possible to use buses with several bits per input. In this case, the operation is applied to each bit of the inputs. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">In_1</fo:block><fo:block margin-left="12mm">The 1. input value for the logic operation.</fo:block><fo:block margin-left="6mm">In_2</fo:block><fo:block margin-left="12mm">The 2. input value for the logic operation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the result of the logic operation.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Inputs</fo:block><fo:block margin-left="12mm">The Number of Inputs used. Every input needs to be connected.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wide Shape</fo:block><fo:block margin-left="12mm">Uses a wider shape to visualize the gate.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_6" src="url('file:/C:/Digital-0.29/target/docu/img/XNOr_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.6. XNOr</fo:block></fo:block><fo:block>A combination of XOR and NOT. The inputs are combined with the XOR operation. The result of this operation is then inverted. It is also possible to use buses with several bits per input. In this case, the operation is applied to each bit of the inputs. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">In_1</fo:block><fo:block margin-left="12mm">The 1. input value for the logic operation.</fo:block><fo:block margin-left="6mm">In_2</fo:block><fo:block margin-left="12mm">The 2. input value for the logic operation.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the result of the logic operation.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Inputs</fo:block><fo:block margin-left="12mm">The Number of Inputs used. Every input needs to be connected.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wide Shape</fo:block><fo:block margin-left="12mm">Uses a wider shape to visualize the gate.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_7" src="url('file:/C:/Digital-0.29/target/docu/img/Not_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.7. Not</fo:block></fo:block><fo:block>Inverts the input value. A 1 becomes a 0 and a 0 becomes 1. It is also possible to use a bus with several bits per input. In this case, the operation is applied to each bit of the inputs. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The input of the NOT gate.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">The inverted input value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Wide Shape</fo:block><fo:block margin-left="12mm">Uses a wider shape to visualize the gate.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="1_8" src="url('file:/C:/Digital-0.29/target/docu/img/LookUpTable_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">1.8. Lookup Table</fo:block></fo:block><fo:block>Gets the output value from a stored table. So this gate can emulate every combinatorial gate. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">0</fo:block><fo:block margin-left="12mm">Input 0. This input in combination with all other inputs defines the address of the stored value to be returned.</fo:block><fo:block margin-left="6mm">1</fo:block><fo:block margin-left="12mm">Input 1. This input in combination with all other inputs defines the address of the stored value to be returned.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the stored value at the address set via the inputs.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Inputs</fo:block><fo:block margin-left="12mm">The Number of Inputs used. Every input needs to be connected.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data</fo:block><fo:block margin-left="12mm">The values stored in this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">2.
			IO</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_1" src="url('file:/C:/Digital-0.29/target/docu/img/Out_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.1. Output</fo:block></fo:block><fo:block>Can be used to display an output signal in a circuit. This element is also used to connect a circuit to an embedding circuit. In this case the connection is bidirectional. Is also used to assign a pin number, if the code for a CPLD or FPGA is generated. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">This value is used for the output connection.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Description</fo:block><fo:block margin-left="12mm">A short description of this element and its usage.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pin number</fo:block><fo:block margin-left="12mm">Number of this pin. Used for the representation of a circuit as a DIL package and the pin assignment when programming a CPLD. If there are several bits, all pin numbers can be specified as a comma-separated list.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show in Measurement Graph</fo:block><fo:block margin-left="12mm">Shows the value in the measurement graph.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Small Shape</fo:block><fo:block margin-left="12mm">If selected, a smaller shape will be used.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_2" src="url('file:/C:/Digital-0.29/target/docu/img/LED_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.2. LED</fo:block></fo:block><fo:block>A LED can be used to visualize an output value. Accepts a single bit. Lights up if the input is set to 1.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">LED Input. LED lights up if the input is set to 1.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Size</fo:block><fo:block margin-left="12mm">The size of the shape in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_3" src="url('file:/C:/Digital-0.29/target/docu/img/In_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.3. Input</fo:block></fo:block><fo:block>Can be used to interactively manipulate an input signal in a circuit with the mouse. This element is also used to connect a circuit to an embedding circuit. In this case the connection is bidirectional. Is also used to assign an pin number, if code for a CPLD or FPGA is generated. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Gives the value which is connected to this input.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Description</fo:block><fo:block margin-left="12mm">A short description of this element and its usage.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. A "Z" means high-z state.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Is three-state input</fo:block><fo:block margin-left="12mm">If set the input is allowed to be in high-z state. At the input component this is also allowed if high-z ("Z") is set as the default value.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">No zero output.</fo:block><fo:block margin-left="12mm">Avoids zero output. This is especially helpful when setting up relay circuits. Can only be activated if a high-z output is allowed.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pin number</fo:block><fo:block margin-left="12mm">Number of this pin. Used for the representation of a circuit as a DIL package and the pin assignment when programming a CPLD. If there are several bits, all pin numbers can be specified as a comma-separated list.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show in Measurement Graph</fo:block><fo:block margin-left="12mm">Shows the value in the measurement graph.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Small Shape</fo:block><fo:block margin-left="12mm">If selected, a smaller shape will be used.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_4" src="url('file:/C:/Digital-0.29/target/docu/img/Clock_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.4. Clock Input</fo:block></fo:block><fo:block>A clock signal. It's possible to control it by a real-time clock. Depending on the complexity of the circuit, the clock frequency achieved may be less than the selected value. If the frequency is greater than 50Hz, the graphic representation of the circuit will no longer be updated at every clock cycle so that the wire colors will no longer be updated. If the real-time clock is not activated, the clock can be controlled by mouse clicks. Is also used to assign an pin number, if code for a CPLD or FPGA is generated. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Switches between 0 and 1 with the selected clock frequency.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Start real time clock</fo:block><fo:block margin-left="12mm">If enabled the runtime clock is started when the circuit is started</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Frequency/Hz</fo:block><fo:block margin-left="12mm">The real time frequency used for the real time clock</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pin number</fo:block><fo:block margin-left="12mm">Number of this pin. Used for the representation of a circuit as a DIL package and the pin assignment when programming a CPLD. If there are several bits, all pin numbers can be specified as a comma-separated list.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Small Shape</fo:block><fo:block margin-left="12mm">If selected, a smaller shape will be used.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_5" src="url('file:/C:/Digital-0.29/target/docu/img/Button_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.5. Button</fo:block></fo:block><fo:block>A simple push button which goes back to its original state when it is released.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">The output signal of the button.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Active Low</fo:block><fo:block margin-left="12mm">If selected the output is low if the component is active.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Map to keyboard</fo:block><fo:block margin-left="12mm">Button is mapped to the keyboard. To use the cursor keys use UP, DOWN, LEFT or RIGHT as label.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show in Measurement Graph</fo:block><fo:block margin-left="12mm">Shows the value in the measurement graph.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_6" src="url('file:/C:/Digital-0.29/target/docu/img/DipSwitch_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.6. DIP Switch</fo:block></fo:block><fo:block>Simple DIP switch that can output either high or low.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">The output value of the switch.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Description</fo:block><fo:block margin-left="12mm">A short description of this element and its usage.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Output is High</fo:block><fo:block margin-left="12mm">The default output value of the DIP switch when the simulation starts.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_7" src="url('file:/C:/Digital-0.29/target/docu/img/Probe_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.7. Probe</fo:block></fo:block><fo:block>A measurement value which can be shown in the data graph or measurement table. This component can be used to easily observe values from embedded circuits. Does not affect the simulation.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The measurement value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Display Mode</fo:block><fo:block margin-left="12mm">Defines whether the value or a counter is to be displayed.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show in Measurement Graph</fo:block><fo:block margin-left="12mm">Shows the value in the measurement graph.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_8" src="url('file:/C:/Digital-0.29/target/docu/img/Data_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.8. Data Graph</fo:block></fo:block><fo:block>Shows a data plot inside of the circuit panel. You can plot complete clock cycles or single gate changes. Does not affect the simulation.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Show single gate steps</fo:block><fo:block margin-left="12mm">Shows all single step steps in the graphic.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Max number of steps to show</fo:block><fo:block margin-left="12mm">The maximal number of values stored. If the maximum number is reached, the oldest values are discarded.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Snap To Grid</fo:block><fo:block margin-left="12mm">If set, the component is aligned with the grid.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="2_9" src="url('file:/C:/Digital-0.29/target/docu/img/ScopeTrigger_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">2.9. Triggered Data Graph</fo:block></fo:block><fo:block>Shows a graph of measured values, whereby measured values are only stored if the input signal changes. Storing takes place when the circuit has stabilized. The trigger does not start the measurement like in a real scope, but each trigger event stores a single measurement value for each of the shown signals. As direct input there is only the trigger. The inputs and outputs of the circuit, flip-flops and registers and the probe component can be used as signals. This can be activated in the respective components.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">T</fo:block><fo:block margin-left="12mm">A change at this input causes measured values to be stored.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Trigger</fo:block><fo:block margin-left="12mm">Trigger condition for data recording.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Max number of steps to show</fo:block><fo:block margin-left="12mm">The maximal number of values stored. If the maximum number is reached, the oldest values are discarded.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">3.
			IO - Displays</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_1" src="url('file:/C:/Digital-0.29/target/docu/img/RGBLED_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.1. RGB-LED</fo:block></fo:block><fo:block>An RGB LED whose color can be controlled via three inputs. At each of the three inputs, a color channel is connected.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">R</fo:block><fo:block margin-left="12mm">The red color channel.</fo:block><fo:block margin-left="6mm">G</fo:block><fo:block margin-left="12mm">The green color channel.</fo:block><fo:block margin-left="6mm">B</fo:block><fo:block margin-left="12mm">The blue color channel.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Size</fo:block><fo:block margin-left="12mm">The size of the shape in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_2" src="url('file:/C:/Digital-0.29/target/docu/img/PolarityAwareLED_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.2. LED with two connections.</fo:block></fo:block><fo:block>LED with connections for the cathode and the anode. The LED lights up if the anode is connected to high and the cathode is connected to low. This LED cannot be used as a pull-down resistor. It acts solely as a display element. The shown resistor is only meant to symbolize the required series resistor to limit the current.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The anode connection of the LED.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The cathode connection of the LED.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_3" src="url('file:/C:/Digital-0.29/target/docu/img/ButtonLED_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.3. Button with LED</fo:block></fo:block><fo:block>A simple push button which goes back to its original state when it is released. The push button has an LED which can be switched via an input signal.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">Input for controlling the LED.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">The output signal of the button.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Active Low</fo:block><fo:block margin-left="12mm">If selected the output is low if the component is active.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Map to keyboard</fo:block><fo:block margin-left="12mm">Button is mapped to the keyboard. To use the cursor keys use UP, DOWN, LEFT or RIGHT as label.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_4" src="url('file:/C:/Digital-0.29/target/docu/img/Seven-Seg_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.4. Seven-Segment Display</fo:block></fo:block><fo:block>Seven Segment Display, every segment has its own control input.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">a</fo:block><fo:block margin-left="12mm">This input controls the upper, horizontal line.</fo:block><fo:block margin-left="6mm">b</fo:block><fo:block margin-left="12mm">This input controls the upper, right, vertical line.</fo:block><fo:block margin-left="6mm">c</fo:block><fo:block margin-left="12mm">This input controls the lower, right, vertical line.</fo:block><fo:block margin-left="6mm">d</fo:block><fo:block margin-left="12mm">This input controls the lower horizontal line.</fo:block><fo:block margin-left="6mm">e</fo:block><fo:block margin-left="12mm">This input controls the lower, left, vertical line.</fo:block><fo:block margin-left="6mm">f</fo:block><fo:block margin-left="12mm">This input controls the upper, left, vertical line.</fo:block><fo:block margin-left="6mm">g</fo:block><fo:block margin-left="12mm">This input controls the middle, horizontal line.</fo:block><fo:block margin-left="6mm">dp</fo:block><fo:block margin-left="12mm">This input controls the decimal point.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Common Connection</fo:block><fo:block margin-left="12mm">If selected, a common cathode or anode input is also simulated.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Common</fo:block><fo:block margin-left="12mm">Kind of common connection.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Persistence Of Vision</fo:block><fo:block margin-left="12mm">Specifies the duration of the afterglow. The larger the value, the longer the afterglow duration.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_5" src="url('file:/C:/Digital-0.29/target/docu/img/Seven-Seg-Hex_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.5. Seven-Segment Hex Display</fo:block></fo:block><fo:block>Seven Segment Display with a 4 bit hex input</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">d</fo:block><fo:block margin-left="12mm">The value at this input is visualized at the display.</fo:block><fo:block margin-left="6mm">dp</fo:block><fo:block margin-left="12mm">This input controls the decimal point.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Size</fo:block><fo:block margin-left="12mm">The size of the shape in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_6" src="url('file:/C:/Digital-0.29/target/docu/img/SixteenSeg_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.6. 16-Segment Display</fo:block></fo:block><fo:block>The LED input has 16 bits which control the segments. The second input controls the decimal point.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">led</fo:block><fo:block margin-left="12mm">16-bit bus for driving the LEDs.</fo:block><fo:block margin-left="6mm">dp</fo:block><fo:block margin-left="12mm">This input controls the decimal point.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Size</fo:block><fo:block margin-left="12mm">The size of the shape in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_7" src="url('file:/C:/Digital-0.29/target/docu/img/LightBulb_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.7. Light Bulb</fo:block></fo:block><fo:block>Light bulb with two connections. If a current flows, the bulb lights up! The direction of the current does not matter. The lamp lights when the inputs have different values. The bulb behaves similar to an XOr gate.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">Connection</fo:block><fo:block margin-left="6mm">B</fo:block><fo:block margin-left="12mm">Connection</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="3_8" src="url('file:/C:/Digital-0.29/target/docu/img/LedMatrix_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">3.8. LED-Matrix</fo:block></fo:block><fo:block>A matrix of LEDs. The LEDs are shown in a separate window. The LEDs of a column of the display are controlled by a data word. At another input, the current column is selected. So a multiplexed display is realized. The LEDs are able to light up indefinitely in the simulation to prevent the display from flickering.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">r-data</fo:block><fo:block margin-left="12mm">The row state of the LEDs of a column. Each bit in this data word represents the state of a row of the current column.</fo:block><fo:block margin-left="6mm">c-addr</fo:block><fo:block margin-left="12mm">The number of the current column whose state is currently visible at the other input.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rows</fo:block><fo:block margin-left="12mm">Specifies the number of rows by specifying the number of bits of the row word.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address bits of columns</fo:block><fo:block margin-left="12mm">Addresses the individual columns. Three bits means eight columns.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Color</fo:block><fo:block margin-left="12mm">The Color of the element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Avoid Flicker</fo:block><fo:block margin-left="12mm">It is not possible to increase the frequency so much that the flickering disappears. In order to suppress the flickering nevertheless, a "afterglow" can be switched on for the LEDs with this option. If enabled, the LEDs remain on, even if one of the pins changes to high-z. This simulates a frequency above the critical flicker fusion frequency.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">4.
			IO - Mechanical</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="4_1" src="url('file:/C:/Digital-0.29/target/docu/img/RotEncoder_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">4.1. Rotary Encoder</fo:block></fo:block><fo:block>Rotary knob with rotary encoder. Used to detect rotational movements.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">encoder signal A</fo:block><fo:block margin-left="6mm">B</fo:block><fo:block margin-left="12mm">encoder signal B</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="4_2" src="url('file:/C:/Digital-0.29/target/docu/img/StepperMotorUnipolar_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">4.2. Stepper Motor, unipolar</fo:block></fo:block><fo:block>Unipolar stepper motor with two limit position switches. Full step drive, half step drive and wave drive are supported.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">P0</fo:block><fo:block margin-left="12mm">Phase 0</fo:block><fo:block margin-left="6mm">P1</fo:block><fo:block margin-left="12mm">Phase 1</fo:block><fo:block margin-left="6mm">P2</fo:block><fo:block margin-left="12mm">Phase 2</fo:block><fo:block margin-left="6mm">P3</fo:block><fo:block margin-left="12mm">Phase 3</fo:block><fo:block margin-left="6mm">com</fo:block><fo:block margin-left="12mm">Common center coil connection</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">S0</fo:block><fo:block margin-left="12mm">Limit position switch 0, becomes 1 when the motor angle is 0°.</fo:block><fo:block margin-left="6mm">S1</fo:block><fo:block margin-left="12mm">Limit position switch 1, becomes 1 when the motor angle is 180°.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted output</fo:block><fo:block margin-left="12mm">If selected the output is inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="4_3" src="url('file:/C:/Digital-0.29/target/docu/img/StepperMotorBipolar_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">4.3. Stepper Motor, bipolar</fo:block></fo:block><fo:block>Bipolar stepper motor with two limit position switches. Full step drive, half step drive and wave drive are supported.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A+</fo:block><fo:block margin-left="12mm">Coil A, positive</fo:block><fo:block margin-left="6mm">A-</fo:block><fo:block margin-left="12mm">Coil A, negative</fo:block><fo:block margin-left="6mm">B+</fo:block><fo:block margin-left="12mm">Coil B, positive</fo:block><fo:block margin-left="6mm">B-</fo:block><fo:block margin-left="12mm">Coil B, negative</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">S0</fo:block><fo:block margin-left="12mm">Limit position switch 0, becomes 1 when the motor angle is 0°.</fo:block><fo:block margin-left="6mm">S1</fo:block><fo:block margin-left="12mm">Limit position switch 1, becomes 1 when the motor angle is 180°.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted output</fo:block><fo:block margin-left="12mm">If selected the output is inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">5.
			IO - Peripherals</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="5_1" src="url('file:/C:/Digital-0.29/target/docu/img/Keyboard_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">5.1. Keyboard</fo:block></fo:block><fo:block>A keyboard that can be used to enter text. This component buffers the input, which can then be read out. A separate window is opened for the text input.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock. A rising edge removes the oldest character from the buffer.</fo:block><fo:block margin-left="6mm">en</fo:block><fo:block margin-left="12mm">If high, the output D is active and one character is output. It also enables the clock input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The last typed character, or zero if no character is available. Output is the 16 bit Java char value.</fo:block><fo:block margin-left="6mm">av</fo:block><fo:block margin-left="12mm">This output indicates that characters are available. It can be used to trigger an interrupt.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="5_2" src="url('file:/C:/Digital-0.29/target/docu/img/Terminal_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">5.2. Terminal</fo:block></fo:block><fo:block>You can write ASCII characters to this terminal. The terminal opens its own window to visualize the output.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The data to write to the terminal</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock. A rising edge writes the value at the input to the terminal window.</fo:block><fo:block margin-left="6mm">en</fo:block><fo:block margin-left="12mm">A high at this input enables the clock input.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Characters per line</fo:block><fo:block margin-left="12mm">The number of characters shown in a single line.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Lines</fo:block><fo:block margin-left="12mm">The number of lines to show.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="5_3" src="url('file:/C:/Digital-0.29/target/docu/img/Telnet_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">5.3. Telnet</fo:block></fo:block><fo:block>Allows a Telnet connection to the circuit. It is possible to receive and send characters via Telnet.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The data to be sent.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock input</fo:block><fo:block margin-left="6mm">wr</fo:block><fo:block margin-left="12mm">If set, the input data byte is sent.</fo:block><fo:block margin-left="6mm">rd</fo:block><fo:block margin-left="12mm">If set, a received byte is output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Data output</fo:block><fo:block margin-left="6mm">av</fo:block><fo:block margin-left="12mm">Outputs a one if data is present.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Telnet mode</fo:block><fo:block margin-left="12mm">If set, the Telnet control commands are evaluated. In addition, the server sends the SGA and ECHO commands. If this option is disabled, the server is a simple TCP server.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Port</fo:block><fo:block margin-left="12mm">The port to be opened by the server.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="5_4" src="url('file:/C:/Digital-0.29/target/docu/img/VGA_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">5.4. VGA Monitor</fo:block></fo:block><fo:block>Analyzes the incoming video signals and displays the corresponding graphic. Since the simulation cannot run in real time, the pixel clock is required in addition to the video signals.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">R</fo:block><fo:block margin-left="12mm">The red color component</fo:block><fo:block margin-left="6mm">G</fo:block><fo:block margin-left="12mm">The green color component</fo:block><fo:block margin-left="6mm">B</fo:block><fo:block margin-left="12mm">The blue color component</fo:block><fo:block margin-left="6mm">H</fo:block><fo:block margin-left="12mm">The horizontal synchronization signal</fo:block><fo:block margin-left="6mm">V</fo:block><fo:block margin-left="12mm">The vertical synchronization signal</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The pixel clock</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="5_5" src="url('file:/C:/Digital-0.29/target/docu/img/MIDI_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">5.5. MIDI</fo:block></fo:block><fo:block>Uses the MIDI system to play notes.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">N</fo:block><fo:block margin-left="12mm">Note</fo:block><fo:block margin-left="6mm">V</fo:block><fo:block margin-left="12mm">Volume</fo:block><fo:block margin-left="6mm">OnOff</fo:block><fo:block margin-left="12mm">If set, this translates to pressing a keyboard key (key down event), if not set, this translates to releasing the key (key up event).</fo:block><fo:block margin-left="6mm">en</fo:block><fo:block margin-left="12mm">Enables the component</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">MIDI channel</fo:block><fo:block margin-left="12mm">Selects the MIDI channel to use.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">MIDI instrument</fo:block><fo:block margin-left="12mm">The MIDI instrument to use.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Allow program change</fo:block><fo:block margin-left="12mm">Adds a new input PC. If this input is set to high, the value at input N is used to change the program (instrument).</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">6.
			Wires</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_1" src="url('file:/C:/Digital-0.29/target/docu/img/Ground_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.1. Ground</fo:block></fo:block><fo:block>A connection to ground. Output is always zero. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Output always returns 0.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_2" src="url('file:/C:/Digital-0.29/target/docu/img/VDD_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.2. Supply voltage</fo:block></fo:block><fo:block>A connection to the supply voltage. Output is always one. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">This output always returns 1.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_3" src="url('file:/C:/Digital-0.29/target/docu/img/Const_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.3. Constant value</fo:block></fo:block><fo:block>A component which returns a given value as a simple constant value. The value can be set in the attribute dialog. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the given value as a constant.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Value</fo:block><fo:block margin-left="12mm">The value of the constant.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_4" src="url('file:/C:/Digital-0.29/target/docu/img/Tunnel_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.4. Tunnel</fo:block></fo:block><fo:block>Connects components without a wire. All tunnel elements, which have the same net name, are connected together. Works only locally, so it is not possible to connect different circuits. Unnamed tunnels are ignored silently. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The connection to the tunnel.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Net name</fo:block><fo:block margin-left="12mm">All nets with identical name are connected together.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_5" src="url('file:/C:/Digital-0.29/target/docu/img/Splitter_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.5. Splitter/Merger</fo:block></fo:block><fo:block>Splits or creates a wire bundle or a data bus with more than one bit. With a bus it is e.g. possible to generate 16-bit connections without having to route 16 individual wires. All 16 connections can be merged into one wire. The splitter has a direction, meaning it can only transmit signals in one direction. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">0-3</fo:block><fo:block margin-left="12mm">The input bits 0-3.</fo:block><fo:block margin-left="6mm">4-7</fo:block><fo:block margin-left="12mm">The input bits 4-7.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">0-7</fo:block><fo:block margin-left="12mm">The output bits 0-7.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Input Splitting</fo:block><fo:block margin-left="12mm">If e.g. four bits, two bits and two further bits are to be used as inputs, this can be configured with "4,2,2". The number indicates the number of bits. For convenience, the asterisk can be used: 16 bits can be configured with "[Bits]*[Number]" as "1*16". It is also possible to specify the bits to be used directly and in any order. For example, "4-7,0-3" configures bits 4-7 and 0-3. This notation allows any bit arrangement. The input bits must be specified completely and unambiguously.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Output splitting</fo:block><fo:block margin-left="12mm">If e.g. four bits, two bits and two further bits are to be used as outputs, this can be configured with "4,2,2". The number indicates the number of bits. For convenience, the asterisk can be used: 16 bits can be configured with "[Bits]*[Number]" as "1*16". It is also possible to specify the bits to be used directly and in any order. For example, "4-7,0-3" configures bits 4-7 and 0-3. This notation allows any bit arrangement. Output bits can also be output several times: "0-7,1-6,4-7".</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Spreading</fo:block><fo:block margin-left="12mm">Configures the spread of the inputs and outputs in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_6" src="url('file:/C:/Digital-0.29/target/docu/img/Driver_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.6. Driver</fo:block></fo:block><fo:block>A driver can be used to connect a signal value to another wire. The driver is controlled by the sel input. If the sel input is low, the output is in high z state. If the sel input is high, the output is set to the input value. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The input value of the driver.</fo:block><fo:block margin-left="6mm">sel</fo:block><fo:block margin-left="12mm">Pin to control the driver. If its value is 1 the input is set to the output. If the value is 0, the output is in high z state.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">If the sel input is 1 the input is given to this output. If the sel input is 0, this output is in high z state.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Flip selector position</fo:block><fo:block margin-left="12mm">This option allows you to move te selector pin to the opposite side of the plexer.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_7" src="url('file:/C:/Digital-0.29/target/docu/img/DriverInvSel_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.7. Driver, inverted select</fo:block></fo:block><fo:block>A driver can be used to connect a data word to another line. The driver is controlled by the sel input. If the sel input is high, the output is in high z state. If the sel input is low, the output is set to the input value. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The input value of the driver.</fo:block><fo:block margin-left="6mm">sel</fo:block><fo:block margin-left="12mm">Pin to control the driver. If its value is 0 the input is given to the output. If the value is 1, the output is in high z state.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">If the sel input is 1 the input is given to this output. If the sel input is 0, this output is in high z state.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Flip selector position</fo:block><fo:block margin-left="12mm">This option allows you to move te selector pin to the opposite side of the plexer.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_8" src="url('file:/C:/Digital-0.29/target/docu/img/Delay_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.8. Delay</fo:block></fo:block><fo:block>Delays the signal by one propagation delay time. Delays a signal for an adjustable number of gate delays. All other components in Digital have a gate delay of one propagation delay time. This component can be used to realize any necessary propagation delay.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">Input of the signal to be delayed.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">The input signal delayed by one gate delay time.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Duration</fo:block><fo:block margin-left="12mm">Delay time in units of the common gate propagation delay.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_9" src="url('file:/C:/Digital-0.29/target/docu/img/PullUp_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.9. Pull-Up Resistor</fo:block></fo:block><fo:block>If a net is in a HighZ state, this resistor pulls the net to high. In any other case this component has no effect.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">A "weak high".</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_10" src="url('file:/C:/Digital-0.29/target/docu/img/PullDown_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.10. Pull-Down Resistor</fo:block></fo:block><fo:block>If the net is in a HighZ state, this resistor pulls the net to ground. In any other case this component has no effect.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">A "weak low".</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="6_11" src="url('file:/C:/Digital-0.29/target/docu/img/NotConnected_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">6.11. Not Connected</fo:block></fo:block><fo:block>This component can be used to set a wire to High-Z. If an input of a logical gate is set to high-Z, the read value is undefined. Note that in reality in many cases excessive current consumption and even damage can occur if a digital input is not set to high or low but remains unconnected.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">This output always outputs High-Z.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">7.
			Plexers</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="7_1" src="url('file:/C:/Digital-0.29/target/docu/img/Multiplexer_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">7.1. Multiplexer</fo:block></fo:block><fo:block>A component which uses the value of the sel pin to decide which input value is set to the output. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">sel</fo:block><fo:block margin-left="12mm">This input is used to select the data input which is output.</fo:block><fo:block margin-left="6mm">in_0</fo:block><fo:block margin-left="12mm">The 0. data input of the multiplexer.</fo:block><fo:block margin-left="6mm">in_1</fo:block><fo:block margin-left="12mm">The 1. data input of the multiplexer.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">The value of the selected input.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Selector Bits</fo:block><fo:block margin-left="12mm">Number of bits used for the selector input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Flip selector position</fo:block><fo:block margin-left="12mm">This option allows you to move te selector pin to the opposite side of the plexer.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="7_2" src="url('file:/C:/Digital-0.29/target/docu/img/Demultiplexer_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">7.2. Demultiplexer</fo:block></fo:block><fo:block>A component that can output the input value to one of the outputs. The other outputs are set to the default value. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">sel</fo:block><fo:block margin-left="12mm">This pin selects the output to use.</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The value of this input is given to the selected data output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out_0</fo:block><fo:block margin-left="12mm">Data output 0.</fo:block><fo:block margin-left="6mm">out_1</fo:block><fo:block margin-left="12mm">Data output 1.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Selector Bits</fo:block><fo:block margin-left="12mm">Number of bits used for the selector input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Flip selector position</fo:block><fo:block margin-left="12mm">This option allows you to move te selector pin to the opposite side of the plexer.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="7_3" src="url('file:/C:/Digital-0.29/target/docu/img/Decoder_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">7.3. Decoder</fo:block></fo:block><fo:block>One selectable output pin is 1, all other outputs are set to 0. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">sel</fo:block><fo:block margin-left="12mm">This input selects the enabled output. The selected output is set to 1. All other outputs are set to 0.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out_0</fo:block><fo:block margin-left="12mm">Output 0. This output is 1 if selected by the sel input.</fo:block><fo:block margin-left="6mm">out_1</fo:block><fo:block margin-left="12mm">Output 1. This output is 1 if selected by the sel input.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Selector Bits</fo:block><fo:block margin-left="12mm">Number of bits used for the selector input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Flip selector position</fo:block><fo:block margin-left="12mm">This option allows you to move te selector pin to the opposite side of the plexer.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="7_4" src="url('file:/C:/Digital-0.29/target/docu/img/BitSelector_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">7.4. Bit Selector</fo:block></fo:block><fo:block>Selects a single bit from a data bus. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The input bus</fo:block><fo:block margin-left="6mm">sel</fo:block><fo:block margin-left="12mm">This input selects the bit</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">The selected bit.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Selector Bits</fo:block><fo:block margin-left="12mm">Number of bits used for the selector input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Flip selector position</fo:block><fo:block margin-left="12mm">This option allows you to move te selector pin to the opposite side of the plexer.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="7_5" src="url('file:/C:/Digital-0.29/target/docu/img/PriorityEncoder_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">7.5. Priority Encoder</fo:block></fo:block><fo:block>If one of the inputs is set, its number is output. If several inputs are set at the same time, the highest number is output. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in0</fo:block><fo:block margin-left="12mm">The 0. input of the priority encoder.</fo:block><fo:block margin-left="6mm">in1</fo:block><fo:block margin-left="12mm">The 1. input of the priority encoder.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">num</fo:block><fo:block margin-left="12mm">Number of the set input.</fo:block><fo:block margin-left="6mm">any</fo:block><fo:block margin-left="12mm">If this output is set, at least one of the inputs is set.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number of Selector Bits</fo:block><fo:block margin-left="12mm">Number of bits used for the selector input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">8.
			Flip-Flops</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_1" src="url('file:/C:/Digital-0.29/target/docu/img/RS_FF_AS_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.1. RS-Flip-flop</fo:block></fo:block><fo:block>A component to store a single bit. Provides the functions "set" and "reset" to set or reset the stored bit. If both inputs are switched to one, both outputs also output a one. If both inputs switch back to zero at the same time, the final state is random.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">The set input.</fo:block><fo:block margin-left="6mm">R</fo:block><fo:block margin-left="12mm">The reset input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">Returns the inverted stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_2" src="url('file:/C:/Digital-0.29/target/docu/img/RS_FF_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.2. RS-Flip-flop, clocked</fo:block></fo:block><fo:block>A component to store a single bit. Provides the functions "set" and "reset" to set or reset the stored bit. If both inputs (S, R) are set at the rising edge of the clock, the final state is random.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">The set input.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The clock input. A rising edge initiates a state transition.</fo:block><fo:block margin-left="6mm">R</fo:block><fo:block margin-left="12mm">The reset input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">Returns the inverted stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_3" src="url('file:/C:/Digital-0.29/target/docu/img/JK_FF_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.3. JK-Flip-flop</fo:block></fo:block><fo:block>Has the possibility to store (J=K=0), set (J=1, K=0), reset (J=0, K=1) or toggle (J=K=1) the stored value. A change of state takes place only at a rising edge at the clock input C. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">J</fo:block><fo:block margin-left="12mm">The set input of the flip-flop.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The clock input. A rising edge initiates a state change.</fo:block><fo:block margin-left="6mm">K</fo:block><fo:block margin-left="12mm">The reset input of the flip-flop.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">Returns the inverted stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_4" src="url('file:/C:/Digital-0.29/target/docu/img/D_FF_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.4. D-Flip-flop</fo:block></fo:block><fo:block>A component used to store a value. The value on pin D is stored on a rising edge of the clock pin C. The bit width can be selected, which allows to store multiple bits. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">Input of the bit to be stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock pin to store a value. The value on input D is stored on a rising edge of this pin.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">Returns the inverted stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_5" src="url('file:/C:/Digital-0.29/target/docu/img/T_FF_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.5. T-Flip-Flop</fo:block></fo:block><fo:block>Stores a single bit. Toggles the state on a rising edge at input C.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">T</fo:block><fo:block margin-left="12mm">Enables the toggle function.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock input. A rising edge toggles the output, if input T is set to 1.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">Returns the inverted stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Enable Input</fo:block><fo:block margin-left="12mm">If set an enable input (T) is available.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_6" src="url('file:/C:/Digital-0.29/target/docu/img/JK_FF_AS_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.6. JK-Flip-flop, asynchronous</fo:block></fo:block><fo:block>Has the possibility to store (J=K=0), set (J=1, K=0), reset (J=0, K=1) or toggle (J=K=1) the stored value. A change of state takes place only at a rising edge at the clock input C. There are two additional inputs which set or reset the state immediately without a clock signal. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">Set</fo:block><fo:block margin-left="12mm">asynchronous set. A high value at this input sets the flip-flop.</fo:block><fo:block margin-left="6mm">J</fo:block><fo:block margin-left="12mm">The set input of the flip-flop.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The Clock input. A rising edge initiates a state change.</fo:block><fo:block margin-left="6mm">K</fo:block><fo:block margin-left="12mm">The reset input of the flip-flop.</fo:block><fo:block margin-left="6mm">Clr</fo:block><fo:block margin-left="12mm">asynchronous clear. A high value at this input clears the flip-flop.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">Returns the inverted stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_7" src="url('file:/C:/Digital-0.29/target/docu/img/D_FF_AS_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.7. D-Flip-flop, asynchronous</fo:block></fo:block><fo:block>A component used to store a value. The value on pin D is stored on a rising edge of the clock pin C. There are two additional inputs which set or reset the state immediately without a clock signal. The bit width can be selected, which allows to store multiple bits. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">Set</fo:block><fo:block margin-left="12mm">asynchronous set. If set to one, all stored bits are set to one.</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">Input of the bit to be stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Control pin to store a bit. The bit on input D is stored on a rising edge of this pin.</fo:block><fo:block margin-left="6mm">Clr</fo:block><fo:block margin-left="12mm">asynchronous clear. If set to one, all stored bits are set to zero.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">Returns the inverted stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="8_8" src="url('file:/C:/Digital-0.29/target/docu/img/Monoflop_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">8.8. Monoflop</fo:block></fo:block><fo:block>The monoflop is set at a rising edge at the clock input. After a configurable delay time, the monoflop will be cleared automatically. The monoflop is retriggerable. It can only be used if there is exactly one clock component present in the circuit. This clock component is used as time base to measure the time delay.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The Clock input. A rising edge sets the monoflop.</fo:block><fo:block margin-left="6mm">R</fo:block><fo:block margin-left="12mm">Reset Input. A high value clears the monoflop.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">output</fo:block><fo:block margin-left="6mm">¬Q</fo:block><fo:block margin-left="12mm">inverted output</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pulse Width</fo:block><fo:block margin-left="12mm">The pulse width is measured in clock cycles.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Default</fo:block><fo:block margin-left="12mm">This value is set if the circuit is started. At the demultiplexer, this value is set for the non-selected outputs.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">9.
			Memory - RAM</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_1" src="url('file:/C:/Digital-0.29/target/docu/img/RAMDualPort_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.1. RAM, separated Ports</fo:block></fo:block><fo:block>A RAM module with separate inputs for storing and output for reading the stored data. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address to read from or write to.</fo:block><fo:block margin-left="6mm">Din</fo:block><fo:block margin-left="12mm">The data to be stored in the RAM.</fo:block><fo:block margin-left="6mm">str</fo:block><fo:block margin-left="12mm">If this input is high and when the clock becomes high, the data is stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock input</fo:block><fo:block margin-left="6mm">ld</fo:block><fo:block margin-left="12mm">If this input is high the output is activated and the data is visible at the output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The data output pin</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_2" src="url('file:/C:/Digital-0.29/target/docu/img/BlockRAMDualPort_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.2. Block-RAM, separated ports</fo:block></fo:block><fo:block>A RAM module with separate inputs for storing and output for reading the stored data. This RAM only updates its output on a rising edge of the clock input. This allows the usage of Block RAM on an FPGA. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address to read from or write to.</fo:block><fo:block margin-left="6mm">Din</fo:block><fo:block margin-left="12mm">The data to be stored in the RAM.</fo:block><fo:block margin-left="6mm">str</fo:block><fo:block margin-left="12mm">If this input is high and when the clock becomes high, the data is stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock input</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The data output pin</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_3" src="url('file:/C:/Digital-0.29/target/docu/img/RAMSinglePort_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.3. RAM, bidirectional Port</fo:block></fo:block><fo:block>A RAM module with a bidirectional pin for reading and writing the data.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address to read and write.</fo:block><fo:block margin-left="6mm">str</fo:block><fo:block margin-left="12mm">If this input is high when the clock becomes high, the data is stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock</fo:block><fo:block margin-left="6mm">ld</fo:block><fo:block margin-left="12mm">If this input is high the output is activated and the data is visible at the output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The bidirectional data connection.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_4" src="url('file:/C:/Digital-0.29/target/docu/img/RAMSinglePortSel_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.4. RAM, Chip Select</fo:block></fo:block><fo:block>A RAM module with a bidirectional connection for reading and writing the data. If the CS input is low, the component is disabled. This allows to build a larger RAM from some smaller RAMs and a address decoder. The write cycle works as follows: By setting CS to high, the component is selected. A rising edge at WE latches the address, and the following falling edge at WE stores the data.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address to read and write.</fo:block><fo:block margin-left="6mm">CS</fo:block><fo:block margin-left="12mm">If this input is high, this RAM is enabled. Otherwise the output is always in high Z state.</fo:block><fo:block margin-left="6mm">WE</fo:block><fo:block margin-left="12mm">If set to high the data is written to the RAM.</fo:block><fo:block margin-left="6mm">OE</fo:block><fo:block margin-left="12mm">If this input is high, the stored value is output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The bidirectional data connection.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_5" src="url('file:/C:/Digital-0.29/target/docu/img/RegisterFile_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.5. Register File</fo:block></fo:block><fo:block>Memory with one port that allows to write and two ports that allow to read from the memory simultaneously. Can be used to implement processor registers. Two registers can be read simultaneously and a third can be written. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">Din</fo:block><fo:block margin-left="12mm">The data to be stored in the register Rw.</fo:block><fo:block margin-left="6mm">we</fo:block><fo:block margin-left="12mm">If this input is high and when the clock becomes high, the data is stored.</fo:block><fo:block margin-left="6mm">Rw</fo:block><fo:block margin-left="12mm">The register into which the data is written.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock</fo:block><fo:block margin-left="6mm">Ra</fo:block><fo:block margin-left="12mm">The register which is visible at port a.</fo:block><fo:block margin-left="6mm">Rb</fo:block><fo:block margin-left="12mm">The register which is visible at port b.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Da</fo:block><fo:block margin-left="12mm">Output Port a</fo:block><fo:block margin-left="6mm">Db</fo:block><fo:block margin-left="12mm">Output Port b</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_6" src="url('file:/C:/Digital-0.29/target/docu/img/RAMDualAccess_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.6. RAM, Dual Port</fo:block></fo:block><fo:block>RAM with one port that allows to write to and read from the RAM, and a second read only port. This second port can be used to give some graphic logic access to the memory contents. In this way, a processor can write to the RAM, and a graphics logic can simultaneously read from the RAM. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">str</fo:block><fo:block margin-left="12mm">If this input is high and when the clock becomes high, the data is stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock</fo:block><fo:block margin-left="6mm">ld</fo:block><fo:block margin-left="12mm">If this input is high the output is activated and the data is visible at the output 1D.</fo:block><fo:block margin-left="6mm">1A</fo:block><fo:block margin-left="12mm">The address at which port 1 is read or written.</fo:block><fo:block margin-left="6mm">1Din</fo:block><fo:block margin-left="12mm">The data to be stored in the RAM.</fo:block><fo:block margin-left="6mm">2A</fo:block><fo:block margin-left="12mm">The address used to read via port 2.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">1D</fo:block><fo:block margin-left="12mm">Output Port 1</fo:block><fo:block margin-left="6mm">2D</fo:block><fo:block margin-left="12mm">Output Port 2</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_7" src="url('file:/C:/Digital-0.29/target/docu/img/RAMAsync_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.7. RAM, async.</fo:block></fo:block><fo:block>As long as we is set, it is stored. Corresponds to a very simple RAM, where the address and data lines are directly connected to the decoders of the memory cells. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address at which reading or writing takes place.</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The data to be stored.</fo:block><fo:block margin-left="6mm">we</fo:block><fo:block margin-left="12mm">Write enable. As long as this input is set to 1, the value applied to D is stored at the address applied to A whenever A or D is changed.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Output of the stored data.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="9_8" src="url('file:/C:/Digital-0.29/target/docu/img/GraphicCard_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">9.8. Graphic RAM</fo:block></fo:block><fo:block>Used to show a bitmap graphic. This element behaves like a RAM. In addition it shows its content on a graphic screen. Every pixel is represented by a memory address. The value stored defines the color of the pixel, using a fixed color palette. There are two screen buffers implemented to support page flipping. The input B selects which buffer is shown. Thus, the total memory size is dx * dy * 2 words. The palette used is structured as follows: The indices 0-9 correspond to the colors white, black, red, green, blue, yellow, cyan, magenta, orange and pink. The indices 32-63 map gray values and the indices 64-127 represent 64 color values each with two bits per color channel. This results in a simple palette that can be addressed with only 7-bit. If the architecture supports a 16-bit index, from Index 0x8000, a high-color mode with 5 bits per color channel can be used, which enables 32768 colors.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address to read and write.</fo:block><fo:block margin-left="6mm">str</fo:block><fo:block margin-left="12mm">If this input is high when the clock becomes high, the data is stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock</fo:block><fo:block margin-left="6mm">ld</fo:block><fo:block margin-left="12mm">If this input is high the output is activated and the data is visible at the output.</fo:block><fo:block margin-left="6mm">B</fo:block><fo:block margin-left="12mm">Selects the screen buffer to show.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The bidirectional data connection.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Width in pixels</fo:block><fo:block margin-left="12mm">The screen width in pixels.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Height in pixels</fo:block><fo:block margin-left="12mm">The screen height in pixels.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">10.
			Memory - EEPROM</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="10_1" src="url('file:/C:/Digital-0.29/target/docu/img/EEPROM_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">10.1. EEPROM</fo:block></fo:block><fo:block>A EEPROM module with a bidirectional connection for reading and writing the data. If the CS input is low, the component is disabled. The data content is stored like in a ROM. It is thus preserved when the simulation is terminated and restarted. The write cycle works as follows: By setting CS to high, the component is selected. A rising edge at WE latches the address, and the following falling edge at WE stores the data.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address to read and write.</fo:block><fo:block margin-left="6mm">CS</fo:block><fo:block margin-left="12mm">If this input is high, this EEPROM is enabled. Otherwise the output is always in high Z state.</fo:block><fo:block margin-left="6mm">WE</fo:block><fo:block margin-left="12mm">If set to high the data is written to the EEPROM.</fo:block><fo:block margin-left="6mm">OE</fo:block><fo:block margin-left="12mm">If this input is high, the stored value is output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The bidirectional data connection.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data</fo:block><fo:block margin-left="12mm">The values stored in this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="10_2" src="url('file:/C:/Digital-0.29/target/docu/img/EEPROMDualPort_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">10.2. EEPROM, separated Ports</fo:block></fo:block><fo:block>A EEPROM module with separate inputs for storing and output for reading the stored data.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">The address to read from or write to.</fo:block><fo:block margin-left="6mm">Din</fo:block><fo:block margin-left="12mm">The data to be stored in the EEPROM.</fo:block><fo:block margin-left="6mm">str</fo:block><fo:block margin-left="12mm">If this input is high and when the clock becomes high, the data is stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock input</fo:block><fo:block margin-left="6mm">ld</fo:block><fo:block margin-left="12mm">If this input is high the output is activated and the data is visible at the output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The data output pin</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data</fo:block><fo:block margin-left="12mm">The values stored in this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">11.
			Memory</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="11_1" src="url('file:/C:/Digital-0.29/target/docu/img/Register_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">11.1. Register</fo:block></fo:block><fo:block>A component to store values. The bit width of the data word can be selected. Unlike a D flip-flop, the register provides an input which enables the clock. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">Input pin of the data word to be stored.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">Clock input. A rising edge stores the value at the D pin.</fo:block><fo:block margin-left="6mm">en</fo:block><fo:block margin-left="12mm">Enable pin. Storing a value works only if this pin is set high.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Q</fo:block><fo:block margin-left="12mm">Returns the stored value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Counter</fo:block><fo:block margin-left="12mm">Makes this register a program counter. The value of this register is returned to the external assembler IDE to mark the current line of code during debugging.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="11_2" src="url('file:/C:/Digital-0.29/target/docu/img/ROM_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">11.2. ROM</fo:block></fo:block><fo:block>A non-volatile memory component. The stored data can be edited in the attributes dialog. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">This pin defines the address of data word to be output.</fo:block><fo:block margin-left="6mm">sel</fo:block><fo:block margin-left="12mm">If the input is high, the output is activated. If it is low, the data output is in high Z state.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The selected data word if the sel input is high.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data</fo:block><fo:block margin-left="12mm">The values stored in this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Reload at model start</fo:block><fo:block margin-left="12mm">Reloads the HEX file every time the model is started.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">File</fo:block><fo:block margin-left="12mm">File to be loaded into the ROM.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use big endian at import.</fo:block><fo:block margin-left="12mm">Use big endian byte order at import.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="11_3" src="url('file:/C:/Digital-0.29/target/docu/img/ROMDualPort_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">11.3. ROM dual port</fo:block></fo:block><fo:block>A non-volatile memory component. The stored data can be edited in the attributes dialog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">A1</fo:block><fo:block margin-left="12mm">This pin defines the address of data word to be output on D1.</fo:block><fo:block margin-left="6mm">s1</fo:block><fo:block margin-left="12mm">If the input is high, the output D1 is activated. If it is low, the data output is in high Z state.</fo:block><fo:block margin-left="6mm">A2</fo:block><fo:block margin-left="12mm">This pin defines the address of data word to be output on D2.</fo:block><fo:block margin-left="6mm">s2</fo:block><fo:block margin-left="12mm">If the input is high, the output D2 is activated. If it is low, the data output is in high Z state.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D1</fo:block><fo:block margin-left="12mm">The selected data word if the s1 input is high.</fo:block><fo:block margin-left="6mm">D2</fo:block><fo:block margin-left="12mm">The selected data word if the s2 input is high.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Address Bits</fo:block><fo:block margin-left="12mm">Number of address bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data</fo:block><fo:block margin-left="12mm">The values stored in this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Number Format</fo:block><fo:block margin-left="12mm">The format used to show the numbers.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">fixed point digits</fo:block><fo:block margin-left="12mm">Number of fractional binary digits</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Memory</fo:block><fo:block margin-left="12mm">Makes this ROM to program memory. So it can be accessed by an external IDE.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Reload at model start</fo:block><fo:block margin-left="12mm">Reloads the HEX file every time the model is started.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">File</fo:block><fo:block margin-left="12mm">File to be loaded into the ROM.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use big endian at import.</fo:block><fo:block margin-left="12mm">Use big endian byte order at import.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="11_4" src="url('file:/C:/Digital-0.29/target/docu/img/Counter_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">11.4. Counter</fo:block></fo:block><fo:block>A simple counter component. The clock input increases the counter. Can be reset back to 0 with the clr input. The number of bits can be set in the attribute dialog. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">en</fo:block><fo:block margin-left="12mm">If set to 1 the counter is enabled!</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The clock input. A rising edge increases the counter.</fo:block><fo:block margin-left="6mm">clr</fo:block><fo:block margin-left="12mm">Synchronous reset of the counter if set to 1.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the counted value.</fo:block><fo:block margin-left="6mm">ovf</fo:block><fo:block margin-left="12mm">Overflow output. This pin is set to 1 if the counter is on its maximal value and the en input is set to 1.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Counter</fo:block><fo:block margin-left="12mm">Makes this register a program counter. The value of this register is returned to the external assembler IDE to mark the current line of code during debugging.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="11_5" src="url('file:/C:/Digital-0.29/target/docu/img/CounterPreset_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">11.5. Counter with preset</fo:block></fo:block><fo:block>A counter whose value can be set. In addition, a maximum value and a counting direction can be specified. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">en</fo:block><fo:block margin-left="12mm">If set to 1 the counter is enabled!</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The clock input. A rising edge increases or decreases the counter.</fo:block><fo:block margin-left="6mm">dir</fo:block><fo:block margin-left="12mm">Specifies the counting direction. A 0 means upwards.</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">This data word is stored in the counter when ld is set.</fo:block><fo:block margin-left="6mm">ld</fo:block><fo:block margin-left="12mm">If set, the value at input 'in' is stored in the counter at the next clock signal.</fo:block><fo:block margin-left="6mm">clr</fo:block><fo:block margin-left="12mm">Synchronous reset of the counter if set to 1.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the counted value.</fo:block><fo:block margin-left="6mm">ovf</fo:block><fo:block margin-left="12mm">Overflow output. It is set to 1 if the 'en' input is set to 1 and if the counter reaches its maximum value when counting up, or has reached 0 when counting down.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Maximum Value</fo:block><fo:block margin-left="12mm">If a zero is entered, the maximum possible value is used (all bits are one).</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Use as measurement value</fo:block><fo:block margin-left="12mm">If set the value is a measurement value and appears in the graph and data table. In addition, a label must be specified that can serve as identification of the value.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program Counter</fo:block><fo:block margin-left="12mm">Makes this register a program counter. The value of this register is returned to the external assembler IDE to mark the current line of code during debugging.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="11_6" src="url('file:/C:/Digital-0.29/target/docu/img/PRNG_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">11.6. Random Number Generator</fo:block></fo:block><fo:block>Can be used to generate random numbers. When the simulation is started, the generator is reinitialized so that a new pseudo-random number sequence is generated at each start. The generator can be initialized in the running simulation with a defined seed value to generate a defined pseudo-random number sequence.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">New seed value of the generator.</fo:block><fo:block margin-left="6mm">se</fo:block><fo:block margin-left="12mm">If set, the random number generator is reinitialized with the new seed value at the next rising clock edge.</fo:block><fo:block margin-left="6mm">ne</fo:block><fo:block margin-left="12mm">If set, a new random number is output at the next rising clock edge.</fo:block><fo:block margin-left="6mm">C</fo:block><fo:block margin-left="12mm">The clock input.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">R</fo:block><fo:block margin-left="12mm">Output of the pseudorandom number.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">12.
			Arithmetic</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_1" src="url('file:/C:/Digital-0.29/target/docu/img/Add_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.1. Adder</fo:block></fo:block><fo:block>A component for simple add calculations. Adds the two integer values from input a and input b (a+b). The result will be incremented by one if the carry input is set. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">a</fo:block><fo:block margin-left="12mm">First input to add.</fo:block><fo:block margin-left="6mm">b</fo:block><fo:block margin-left="12mm">Second input to add.</fo:block><fo:block margin-left="6mm">c_i</fo:block><fo:block margin-left="12mm">Carry input, if set the result is incremented by one.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">s</fo:block><fo:block margin-left="12mm">The result of the addition</fo:block><fo:block margin-left="6mm">c_o</fo:block><fo:block margin-left="12mm">Carry output. If set there was an overflow.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_2" src="url('file:/C:/Digital-0.29/target/docu/img/Sub_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.2. Subtract</fo:block></fo:block><fo:block>A component for simple subtractions. Subtracts binary numbers on input a and input b (a-b). If the carry input is set to 1 the result is decremented by 1. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">a</fo:block><fo:block margin-left="12mm">Input a for subtraction.</fo:block><fo:block margin-left="6mm">b</fo:block><fo:block margin-left="12mm">Input b for subtraction.</fo:block><fo:block margin-left="6mm">c_i</fo:block><fo:block margin-left="12mm">Carry input, if set the result is decremented by one.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">s</fo:block><fo:block margin-left="12mm">Output returns the result of the subtraction.</fo:block><fo:block margin-left="6mm">c_o</fo:block><fo:block margin-left="12mm">Output returns 1 if an overflow occurred.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_3" src="url('file:/C:/Digital-0.29/target/docu/img/Mul_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.3. Multiply</fo:block></fo:block><fo:block>A component for multiplication. Multiplies the integer numbers on input pin a and input pin b. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">a</fo:block><fo:block margin-left="12mm">Input a for multiplication.</fo:block><fo:block margin-left="6mm">b</fo:block><fo:block margin-left="12mm">Input b for multiplication.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">mul</fo:block><fo:block margin-left="12mm">Output for the result of the multiplication.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Signed Operation</fo:block><fo:block margin-left="12mm">If selected the operation is performed with signed (2th complement) values.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_4" src="url('file:/C:/Digital-0.29/target/docu/img/Div_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.4. Division</fo:block></fo:block><fo:block>A component for division. Divides the integer applied to input a by the integer applied to input b. If the divisor is zero, it is divided by one instead. In signed division, the remainder is always positive.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">a</fo:block><fo:block margin-left="12mm">dividend</fo:block><fo:block margin-left="6mm">b</fo:block><fo:block margin-left="12mm">divisor</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">q</fo:block><fo:block margin-left="12mm">quotient</fo:block><fo:block margin-left="6mm">r</fo:block><fo:block margin-left="12mm">remainder</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Signed Operation</fo:block><fo:block margin-left="12mm">If selected the operation is performed with signed (2th complement) values.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Remainder always positive</fo:block><fo:block margin-left="12mm">If set, the remainder of a signed division is always positive.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_5" src="url('file:/C:/Digital-0.29/target/docu/img/BarrelShifter_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.5. Barrel shifter</fo:block></fo:block><fo:block>A component for bit shifting. Shifts the input value by the number of bits given by the shift input.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">Input with bits to be shifted.</fo:block><fo:block margin-left="6mm">shift</fo:block><fo:block margin-left="12mm">Input with shift width.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Output with shifted value.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">shift input has sign</fo:block><fo:block margin-left="12mm">shift input data has two complement format</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Direction</fo:block><fo:block margin-left="12mm">Set direction.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mode</fo:block><fo:block margin-left="12mm">Mode of barrel shifter</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_6" src="url('file:/C:/Digital-0.29/target/docu/img/Comparator_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.6. Comparator</fo:block></fo:block><fo:block>A component for comparing bit values. Compares the binary numbers on input pin a and input pin b and sets the corresponding outputs. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">a</fo:block><fo:block margin-left="12mm">Input a to compare.</fo:block><fo:block margin-left="6mm">b</fo:block><fo:block margin-left="12mm">Input b to compare.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">&gt;</fo:block><fo:block margin-left="12mm">Output is 1 if input a is greater than input b</fo:block><fo:block margin-left="6mm">=</fo:block><fo:block margin-left="12mm">Output is 1 if input a equals input b</fo:block><fo:block margin-left="6mm">&lt;</fo:block><fo:block margin-left="12mm">Output is 1 if input a is less than input b</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Signed Operation</fo:block><fo:block margin-left="12mm">If selected the operation is performed with signed (2th complement) values.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_7" src="url('file:/C:/Digital-0.29/target/docu/img/Neg_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.7. Negation</fo:block></fo:block><fo:block>Negation in the 2th complement Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">Input of the data word to be negated in 2th complement</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Returns the result of the negation in 2th complement.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_8" src="url('file:/C:/Digital-0.29/target/docu/img/BitExtender_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.8. Sign extender</fo:block></fo:block><fo:block>Increases the bit width of a signed value keeping the values sign. If the input is a single bit, this bit will be output on all output bits. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">Input value. The input bit width must be smaller than the output bit width!</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Extended input value. The input bit width must be smaller than the output bit width!</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Input Bit Width</fo:block><fo:block margin-left="12mm">The number of output bits must be greater than the number of input bits.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Output Bit Width</fo:block><fo:block margin-left="12mm">The number of output bits must be greater than the number of input bits.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="12_9" src="url('file:/C:/Digital-0.29/target/docu/img/BitCount_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">12.9. Bit counter</fo:block></fo:block><fo:block>Returns the number of 1-bits in the input value.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">The input which 1-bits are counted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">Outputs the number of 1-bits.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">13.
			Switches</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_1" src="url('file:/C:/Digital-0.29/target/docu/img/Switch_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.1. Switch</fo:block></fo:block><fo:block>Simple switch. There is no gate delay: A signal change is propagated immediately.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">A1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block><fo:block margin-left="6mm">B1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pole count</fo:block><fo:block margin-left="12mm">Number of poles available.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Closed</fo:block><fo:block margin-left="12mm">Sets the initial state of the switch.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Switch behaves like an input</fo:block><fo:block margin-left="12mm">If the model is analyzed, the switch behaves like an input, where "open" corresponds to '0' and "closed" to '1'.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_2" src="url('file:/C:/Digital-0.29/target/docu/img/SwitchDT_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.2. Double Throw Switch</fo:block></fo:block><fo:block>Double Throw Switch. There is no gate delay: A signal change is propagated immediately.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">A1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block><fo:block margin-left="6mm">B1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block><fo:block margin-left="6mm">C1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pole count</fo:block><fo:block margin-left="12mm">Number of poles available.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_3" src="url('file:/C:/Digital-0.29/target/docu/img/Relay_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.3. Relay</fo:block></fo:block><fo:block>A relay is a switch which can be controlled by a coil. If a current flows through the coil, the switch is closed or opened. There is no flyback diode so the current direction does not matter. The switch is actuated if the inputs have different values. The relay behaves similar to an XOr gate.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in1</fo:block><fo:block margin-left="12mm">One of the inputs to control the relay.</fo:block><fo:block margin-left="6mm">in2</fo:block><fo:block margin-left="12mm">One of the inputs to control the relay.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">A1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block><fo:block margin-left="6mm">B1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pole count</fo:block><fo:block margin-left="12mm">Number of poles available.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Relay is normally closed.</fo:block><fo:block margin-left="12mm">If set the relay is closed if the input is low.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_4" src="url('file:/C:/Digital-0.29/target/docu/img/RelayDT_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.4. Double Throw Relay</fo:block></fo:block><fo:block>A relay is a switch which can be controlled by a coil. If a current flows through the coil, the switch is closed or opened. There is no flyback diode so the current direction does not matter. The switch is actuated if the inputs have different values. The relay behaves similar to an XOr gate.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in1</fo:block><fo:block margin-left="12mm">One of the inputs to control the relay.</fo:block><fo:block margin-left="6mm">in2</fo:block><fo:block margin-left="12mm">One of the inputs to control the relay.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">A1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block><fo:block margin-left="6mm">B1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block><fo:block margin-left="6mm">C1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Pole count</fo:block><fo:block margin-left="12mm">Number of poles available.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_5" src="url('file:/C:/Digital-0.29/target/docu/img/PFET_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.5. P-Channel FET</fo:block></fo:block><fo:block>P-Channel Field Effect Transistor. The bulk is connected to the pos. voltage rail and the transistor is simulated without a body diode.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">G</fo:block><fo:block margin-left="12mm">Gate</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">Source</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">Drain</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Unidirectional</fo:block><fo:block margin-left="12mm">Unidirectional transistors propagate a signal only from source to drain. They are much faster to simulate than bidirectional transistors. Since there is no feedback from drain to source, in this mode, the transistor can not short the connected wires when it is conducting. Thus, this mode is necessary to simulate certain CMOS circuits.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_6" src="url('file:/C:/Digital-0.29/target/docu/img/NFET_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.6. N-Channel FET</fo:block></fo:block><fo:block>N-Channel Field Effect Transistor. The bulk is connected to ground and the transistor is simulated without a body diode.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">G</fo:block><fo:block margin-left="12mm">Gate</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">Drain</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">Source</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Unidirectional</fo:block><fo:block margin-left="12mm">Unidirectional transistors propagate a signal only from source to drain. They are much faster to simulate than bidirectional transistors. Since there is no feedback from drain to source, in this mode, the transistor can not short the connected wires when it is conducting. Thus, this mode is necessary to simulate certain CMOS circuits.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_7" src="url('file:/C:/Digital-0.29/target/docu/img/Fuse_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.7. Fuse</fo:block></fo:block><fo:block>A fuse used to build a one time programmable memory.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out1</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block><fo:block margin-left="6mm">out2</fo:block><fo:block margin-left="12mm">One of the connections of the switch.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Programmed</fo:block><fo:block margin-left="12mm">If set a diode is "blown" or "programmed". At a floating gate FET the floating gate is charged. You can change this setting with the [P] key.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_8" src="url('file:/C:/Digital-0.29/target/docu/img/DiodeForward_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.8. Diode to VDD</fo:block></fo:block><fo:block>A simplified unidirectional diode, used to pull a wire to VDD. It is used to implement a wired OR. So it is necessary to connect a pull down resistor to the diodes output. In the simulation the diode behaves like an active gate with a trivalent truth table: If the input high, the output is also high. In all other cases (input is low or high z) the output is in high z state. So two anti parallel connected diodes can keep each other in high state, which is not possible with real diodes. This is an ideal diode: There is no voltage drop across a forward-biased diode.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">If the input is high also the output is high. In all other cases the output is in high z state.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">If the input is high also the output is high. In all other cases the output is in high z state.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Programmed</fo:block><fo:block margin-left="12mm">If set a diode is "blown" or "programmed". At a floating gate FET the floating gate is charged. You can change this setting with the [P] key.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_9" src="url('file:/C:/Digital-0.29/target/docu/img/DiodeBackward_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.9. Diode to Ground</fo:block></fo:block><fo:block>A simplified unidirectional diode, used to pull a wire to ground. It is used to implement a wired AND. So it is necessary to connect a pull up resistor to the diodes output. If the input low, the output is also low. In the other cases (input is high or high z) the output is in high z state. So two anti parallel connected diodes can keep each other in low state, which is not possible with real diodes. So this is a ideal diode: There is no voltage drop across a forward-biased diode.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm">If the input is low also the output is low. In all other cases the output is in high z state.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm">If the input is low also the output is low. In all other cases the output is in high z state.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Programmed</fo:block><fo:block margin-left="12mm">If set a diode is "blown" or "programmed". At a floating gate FET the floating gate is charged. You can change this setting with the [P] key.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_10" src="url('file:/C:/Digital-0.29/target/docu/img/FGPFET_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.10. P-Channel floating gate FET</fo:block></fo:block><fo:block>P-Channel Floating Gate Field Effect Transistor. The bulk is connected to ground and the transistor is simulated without a body diode. If there is a charge stored in the floating gate, the fet isn't conducting even if the gate is low.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">G</fo:block><fo:block margin-left="12mm">Gate</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">Source</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">Drain</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Programmed</fo:block><fo:block margin-left="12mm">If set a diode is "blown" or "programmed". At a floating gate FET the floating gate is charged. You can change this setting with the [P] key.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_11" src="url('file:/C:/Digital-0.29/target/docu/img/FGNFET_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.11. N-Channel floating gate FET</fo:block></fo:block><fo:block>N-Channel Floating Gate Field Effect Transistor. The bulk is connected to ground and the transistor is simulated without a body diode. If there is a charge stored in the floating gate, the fet isn't conducting even if the gate is high.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">G</fo:block><fo:block margin-left="12mm">Gate</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">Drain</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">Source</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Programmed</fo:block><fo:block margin-left="12mm">If set a diode is "blown" or "programmed". At a floating gate FET the floating gate is charged. You can change this setting with the [P] key.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="13_12" src="url('file:/C:/Digital-0.29/target/docu/img/TransGate_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">13.12. Transmission-Gate</fo:block></fo:block><fo:block>A real transmission-gate is build from only two transistors. Therefore, it is often used to save transistors during implementation on silicon.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">S</fo:block><fo:block margin-left="12mm">control input.</fo:block><fo:block margin-left="6mm">¬S</fo:block><fo:block margin-left="12mm">inverted control input</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">A</fo:block><fo:block margin-left="12mm">input A</fo:block><fo:block margin-left="6mm">B</fo:block><fo:block margin-left="12mm">input B</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">14.
			Misc.</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="14_1" src="url('file:/C:/Digital-0.29/target/docu/img/Testcase_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">14.1. Test case</fo:block></fo:block><fo:block>Describes a test case. In a test case you can describe how a circuit should behave. It can then be automatically checked whether the behavior of the circuit actually corresponds to this description. If this is not the case, an error message is shown. The help text of the test case editor describes in detail how such a test case can be created. Exportable to VHDL/Verilog.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Test data</fo:block><fo:block margin-left="12mm">The description of the test case. Details of the syntax can be found in the help dialog of the test data editor.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Enabled</fo:block><fo:block margin-left="12mm">Enables or disables this component.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">15.
			Misc. - Decoration</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="15_1" src="url('file:/C:/Digital-0.29/target/docu/img/Text_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">15.1. Text</fo:block></fo:block><fo:block>Shows a text in the circuit. Does not affect the simulation. The text can be changed in the attribute dialog.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Description</fo:block><fo:block margin-left="12mm">A short description of this element and its usage.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Font Size</fo:block><fo:block margin-left="12mm">Sets the font size to use for this text.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Orientation</fo:block><fo:block margin-left="12mm">Position of the coordinate relative to the text.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Snap To Grid</fo:block><fo:block margin-left="12mm">If set, the component is aligned with the grid.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="15_2" src="url('file:/C:/Digital-0.29/target/docu/img/Rectangle_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">15.2. Rectangle</fo:block></fo:block><fo:block>Shows a rectangle in the circuit. Does not affect the simulation. If a minus sign is used as the heading, the heading is omitted.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Width</fo:block><fo:block margin-left="12mm">Width in grid units</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Height</fo:block><fo:block margin-left="12mm">Height in grid units</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Font Size</fo:block><fo:block margin-left="12mm">Sets the font size to use for this text.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Text Inside</fo:block><fo:block margin-left="12mm">Place text inside the rectangle.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Text at the bottom</fo:block><fo:block margin-left="12mm">Place text at the bottom of the rectangle.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Text on the right</fo:block><fo:block margin-left="12mm">Place text to the right of the rectangle.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Snap To Grid</fo:block><fo:block margin-left="12mm">If set, the component is aligned with the grid.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">16.
			Misc. - Generic</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="16_1" src="url('file:/C:/Digital-0.29/target/docu/img/GenericInitCode_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">16.1. Generic Initialization</fo:block></fo:block><fo:block>Code that is executed to start a generic circuit directly. If a generic circuit is to be started directly, such a component must be present. Exportable to VHDL/Verilog.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Enabled</fo:block><fo:block margin-left="12mm">Enables or disables this component.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Generic Parameterization</fo:block><fo:block margin-left="12mm">Statements used to generify a circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="16_2" src="url('file:/C:/Digital-0.29/target/docu/img/GenericCode_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">16.2. Code</fo:block></fo:block><fo:block>Code that is executed when a generic circuit is made concrete. Can be used, for example, to add components or wires to a circuit. Exportable to VHDL/Verilog.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Generic Parameterization</fo:block><fo:block margin-left="12mm">Statements used to generify a circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">17.
			Misc. - VHDL/Verilog</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="17_1" src="url('file:/C:/Digital-0.29/target/docu/img/External_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">17.1. External</fo:block></fo:block><fo:block>Component to execute an external process to calculate the logic function. Is used to specify the behaviour of a component by VHDL or Verilog. The actual simulation of the behavior must be done with an external simulator. At present only the VHDL simulator ghdl and the verilog simulator Icarus Verilog are supported. The label of the component must match the name of the entity or module! Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm"/></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm"/></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Width</fo:block><fo:block margin-left="12mm">Width of symbol if this circuit is used as an component in an other circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inputs</fo:block><fo:block margin-left="12mm">The inputs of the external process. It is a comma-separated list of signal names. For each signal name, a number of bits separated by a colon can be specified. The inputs of an 8-bit adder could thus be described as "a:8,b:8,c_in".</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Outputs</fo:block><fo:block margin-left="12mm">The outputs of the external process. It is a comma-separated list of signal names. For each signal name, a number of bits separated by a colon can be specified. The outputs of an 8-bit adder could thus be described as "s:8,c_out".</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program code</fo:block><fo:block margin-left="12mm">The program code to be executed by the external application.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Application</fo:block><fo:block margin-left="12mm">Defines which application to use.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">GHDL Options</fo:block><fo:block margin-left="12mm">Options that are used for all processing steps by GHDL.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">IVerilog Options</fo:block><fo:block margin-left="12mm">Options that are used for all processing steps by IVerilog.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="17_2" src="url('file:/C:/Digital-0.29/target/docu/img/ExternalFile_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">17.2. External File</fo:block></fo:block><fo:block>Component to execute an external process to calculate the logic function. Is used to specify the behaviour of a component by VHDL or Verilog. The actual simulation of the behavior must be done with an external simulator. At present only the VHDL simulator ghdl and the verilog simulator Icarus Verilog are supported. The label of the component must match the name of the entity or module! Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">in</fo:block><fo:block margin-left="12mm"/></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">out</fo:block><fo:block margin-left="12mm"/></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Width</fo:block><fo:block margin-left="12mm">Width of symbol if this circuit is used as an component in an other circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inputs</fo:block><fo:block margin-left="12mm">The inputs of the external process. It is a comma-separated list of signal names. For each signal name, a number of bits separated by a colon can be specified. The inputs of an 8-bit adder could thus be described as "a:8,b:8,c_in".</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Outputs</fo:block><fo:block margin-left="12mm">The outputs of the external process. It is a comma-separated list of signal names. For each signal name, a number of bits separated by a colon can be specified. The outputs of an 8-bit adder could thus be described as "s:8,c_out".</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Program code</fo:block><fo:block margin-left="12mm">The file containing the program code to be executed by the external application.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Application</fo:block><fo:block margin-left="12mm">Defines which application to use.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">GHDL Options</fo:block><fo:block margin-left="12mm">Options that are used for all processing steps by GHDL.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">IVerilog Options</fo:block><fo:block margin-left="12mm">Options that are used for all processing steps by IVerilog.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="17_3" src="url('file:/C:/Digital-0.29/target/docu/img/PinControl_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">17.3. Pin Control</fo:block></fo:block><fo:block>Control logic for a bidirectional pin. This component is necessary only in the context of VHDL or Verilog generation, in order to create a bidirectional HDL port! If you don't want to use a bidirectional IO-port on an FPGA, don't use this component! The PinControl component cannot be used in an embedded circuit! It is only allowed at the top level circuit! Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">wr</fo:block><fo:block margin-left="12mm">The data to be output.</fo:block><fo:block margin-left="6mm">oe</fo:block><fo:block margin-left="12mm">Activates the output.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">rd</fo:block><fo:block margin-left="12mm">The data to be read.</fo:block><fo:block margin-left="6mm">pin</fo:block><fo:block margin-left="12mm">The connector for the actual pin. Only a single output should be connected here.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block font-weight="bold" font-size="16pt" margin-bottom="4mm" margin-top="4mm" page-break-after="avoid">18.
			Misc.</fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="18_1" src="url('file:/C:/Digital-0.29/target/docu/img/PowerSupply_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">18.1. Power</fo:block></fo:block><fo:block>Has no function. Makes sure that VDD and GND are connected. Can be used in 74xx circuits to generate the pins for the voltage supply, which are tested for correct wiring.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">VDD</fo:block><fo:block margin-left="12mm">Must be connected to VDD!</fo:block><fo:block margin-left="6mm">GND</fo:block><fo:block margin-left="12mm">Must be connected to GND!</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="18_2" src="url('file:/C:/Digital-0.29/target/docu/img/BusSplitter_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">18.2. Bidirectional Splitter</fo:block></fo:block><fo:block>Can be used for data buses and simplifies especially the construction of memory modules in a DIL package, as the implementation of the data bus is simplified.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">OE</fo:block><fo:block margin-left="12mm">When set, the value at the common data terminal D is output to the bit outputs D[i], if not, the bits D[i] are output to the common output D.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">D</fo:block><fo:block margin-left="12mm">The common data connection.</fo:block><fo:block margin-left="6mm">D0</fo:block><fo:block margin-left="12mm">The data bit 0 of the bus splitter.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Data Bits</fo:block><fo:block margin-left="12mm">Number of data bits used.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Mirror</fo:block><fo:block margin-left="12mm">Mirrors the component in the circuit.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Spreading</fo:block><fo:block margin-left="12mm">Configures the spread of the inputs and outputs in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="18_3" src="url('file:/C:/Digital-0.29/target/docu/img/Reset_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">18.3. Reset</fo:block></fo:block><fo:block>The output of this component is held high during the initialisation of the circuit. After the circuit has stabilized the output goes to low. If the output is inverted it behaves the opposite way. Exportable to VHDL/Verilog.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Outputs</fo:block><fo:block margin-left="6mm">Reset</fo:block><fo:block margin-left="12mm">Reset Output.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted output</fo:block><fo:block margin-left="12mm">If selected the output is inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="18_4" src="url('file:/C:/Digital-0.29/target/docu/img/Break_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">18.4. Break</fo:block></fo:block><fo:block>If this component is used in the circuit, the "Run To Break" button between "Start" and "Stop" is enabled. This button clocks the circuit until a rising edge on the input of this component is detected. This element can be used for debugging by clocking the circuit to any breakpoint. Also an assembler command BRK can be implemented. This allows to execute a program up to the next BRK command. This function can only be used if the real-time clock is deactivated!</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">brk</fo:block><fo:block margin-left="12mm">Stops the fast simulation clocking if a rising edge is detected.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Enabled</fo:block><fo:block margin-left="12mm">Enables or disables this component.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Timeout cycles</fo:block><fo:block margin-left="12mm">If this amount of cycles is reached without a break signal, an error is created.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="18_5" src="url('file:/C:/Digital-0.29/target/docu/img/Stop_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">18.5. Stop</fo:block></fo:block><fo:block>A rising edge at the input stops the simulation. Has the same effect as pressing the Stop button in the toolbar.</fo:block><fo:block keep-together.within-page="always"><fo:block margin-bottom="2mm" margin-top="2mm">Inputs</fo:block><fo:block margin-left="6mm">stop</fo:block><fo:block margin-left="12mm">A rising edge stops the simulation.</fo:block></fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Label</fo:block><fo:block margin-left="12mm">The name of this element.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Inverted inputs</fo:block><fo:block margin-left="12mm">You can select the inputs that are to be inverted.</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Rotation</fo:block><fo:block margin-left="12mm">The orientation of the Element in the circuit.</fo:block></fo:block><fo:block page-break-after="avoid" keep-together.within-page="always"><fo:block margin-top="6mm"><fo:external-graphic id="18_6" src="url('file:/C:/Digital-0.29/target/docu/img/AsyncSeq_en.svg')"/></fo:block><fo:block font-weight="bold" font-size="12pt" margin-bottom="4mm" margin-top="4mm">18.6. Asynchronous Timing</fo:block></fo:block><fo:block>Allows configuration of the timing of an asynchronous sequential circuit such as a Muller-pipeline. The circuit must be started in single gate step mode and must be able to reach a stable state at startup. The sequential circuit can then be started interactively or with a reset gate. It is not allowed to use a regular clock component in this mode.</fo:block><fo:block margin-bottom="2mm" margin-top="2mm">Attributes</fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Start real time clock</fo:block><fo:block margin-left="12mm">If enabled the runtime clock is started when the circuit is started</fo:block></fo:block><fo:block keep-together.within-page="always"><fo:block margin-left="6mm">Frequency/Hz</fo:block><fo:block margin-left="12mm">The real time frequency used for the real time clock</fo:block></fo:block><fo:block id="chap_library" font-weight="bold" font-size="16pt" margin-bottom="4mm" page-break-before="always">
						E
						<fo:inline padding-left="2mm">Library</fo:inline></fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">27c801:
			</fo:inline> 8 Mbit (1Mb x 8) UV EPROM</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">28c010:
			</fo:inline> 1-Megabit (128K x 8) Paged Parallel EEPROM;
DATA Polling for End of Write Detection not implemented!</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">28c16:
			</fo:inline> 16K (2K x 8) Parallel EEPROM;
DATA Polling for End of Write Detection not implemented!</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">28c64:
			</fo:inline> 64K (8K x 8) Parallel EEPROM;
DATA Polling for End of Write Detection not implemented!</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">28c256:
			</fo:inline> 256K (32K x 8) Paged Parallel EEPROM;
DATA Polling for End of Write Detection not implemented!</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">28c512:
			</fo:inline> 512K-Bit (64K x 8) CMOS Parallel EEPROM;
DATA Polling for End of Write Detection not implemented!</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7400:
			</fo:inline> quad 2-input NAND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7401:
			</fo:inline> quad 2-input NAND gate with open-collector outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7402:
			</fo:inline> quad 2-input NOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7403:
			</fo:inline> quad 2-input NAND gate with open-collector outputs, different pinout than 7401</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7404:
			</fo:inline> hex inverter</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7405:
			</fo:inline> hex inverter, open-collector output</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7406:
			</fo:inline> hex inverter buffer, open-collector output</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7407:
			</fo:inline> hex buffer, open-collector output</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7408:
			</fo:inline> quad 2-input AND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7409:
			</fo:inline> quad 2-input AND gate with open-collector outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7410:
			</fo:inline> triple 3-input NAND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7411:
			</fo:inline> triple 3-input AND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7412:
			</fo:inline> triple 3-input NAND gate with open-collector outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7413:
			</fo:inline> dual 4-input NAND gate, Schmitt trigger</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7414:
			</fo:inline> hex inverter, Schmitt trigger</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7415:
			</fo:inline> triple 3-input AND gate with open-collector outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7416:
			</fo:inline> hex inverter buffer, open-collector output, same as 7406</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7417:
			</fo:inline> hex buffer, open-collector output, same as 7407</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7420:
			</fo:inline> dual 4-input NAND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7421:
			</fo:inline> dual 4-input AND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7425:
			</fo:inline> dual 4-input NOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7427:
			</fo:inline> triple 3-input NOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7428:
			</fo:inline> quad 2-input NOR buffer</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7430:
			</fo:inline> 8-input NAND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7432:
			</fo:inline> quad 2-input OR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7440:
			</fo:inline> dual 4-input NAND buffer</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7442:
			</fo:inline> 4-line BCD to 10-line decimal decoder</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7447:
			</fo:inline> BCD to 7-segment decoder, active low</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7448:
			</fo:inline> BCD to 7-segment decoder, active high</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7451:
			</fo:inline> 2-input/3-input AND-NOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7454:
			</fo:inline> 2-3-2-3-line AND NOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7455:
			</fo:inline> 2 wide 4-input AND-NOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7458:
			</fo:inline> dual AND OR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7474:
			</fo:inline> dual D-flip-flop</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7476:
			</fo:inline> dual J-K flip-flops with preset and clear</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7480:
			</fo:inline> Gated Full Adder with Complementary Inputs
and Complementary Sum Outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7482:
			</fo:inline> 2-bit binary full adder</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7483:
			</fo:inline> 4-bit binary full adder</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7483Real:
			</fo:inline> 4-bit binary full adder, real gates</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7485:
			</fo:inline> 4-bit comparator</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7486:
			</fo:inline> quad 2-input XOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7489:
			</fo:inline> 64-bit RAM</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7490:
			</fo:inline> asynchronous two - five - decimal addition counter</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">7493:
			</fo:inline> 4-bit Binary Counter.

Connect QA to CKB and clock on CKA for full 4-bit counter.  Connect QB to R1 and QD to R2 for a BCD counter.</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74107:
			</fo:inline> dual J-K flip-flops with clear</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74109:
			</fo:inline> Dual J-NOT-K flip-flop with set and reset; positive-edge-trigger</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74112:
			</fo:inline> Dual J-K negative-edge-triggered flip-flop, clear and preset</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74116:
			</fo:inline> dual 4-bit D-type latches</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74125:
			</fo:inline> Quadruple bus buffer gates with 3-state outputs (active low output enable)</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74126:
			</fo:inline> Quadruple bus buffer gates with 3-state outputs (active high output enable)</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74133:
			</fo:inline> 13-input NAND gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74138:
			</fo:inline> 3-line to 8-line decoder/demultiplexer, inverted out</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74139:
			</fo:inline> dual 2-line to 4-line decoder/demultiplexer</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74147:
			</fo:inline> 10-line to 4-line priority encoder</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74148:
			</fo:inline> 8-line to 3-Line priority encoder</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74150:
			</fo:inline> 4-line to 16-line data selectors/multiplexers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74151:
			</fo:inline> 3-line to 8-line data selectors/multiplexers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74153:
			</fo:inline> dual 4-line to 1-line data selectors/multiplexers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74154:
			</fo:inline> 4-line to 16-line decoders/demultiplexers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74157:
			</fo:inline> quad 2-line to 1-line data selectors/multiplexers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74160:
			</fo:inline> decimal synchronous counter, async clear</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74161:
			</fo:inline> hex synchronous counter, async clear</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74162:
			</fo:inline> decimal synchronous counter</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74162Real:
			</fo:inline> decimal synchronous counter, real gates</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74163:
			</fo:inline> hex synchronous counter</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74164:
			</fo:inline> 8-bit parallel-out serial shift register, asynchronous clear</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74165:
			</fo:inline> parallel-load 8-bit shift register</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74166:
			</fo:inline> 8-Bit Parallel-In/Serial-Out Shift Register</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74173:
			</fo:inline> quad 3-state D flip-flop with common clock and reset</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74174:
			</fo:inline> hex D-flip-flop</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74175:
			</fo:inline> quad D-flip-flop</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74181:
			</fo:inline> 4-bit arithmetic logic unit</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74182:
			</fo:inline> look-ahead carry generator</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74189:
			</fo:inline> 64-Bit Random Access Memory with 3-STATE Outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74190:
			</fo:inline> Presettable synchronous 4-bit bcd up/down counter</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74191:
			</fo:inline> Presettable synchronous 4-bit binary up/down counter</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74193:
			</fo:inline> Synchronous 4-Bit Up/Down Binary Counter with Dual Clock</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74194:
			</fo:inline> 4-Bit Bidirectional Universal Shift Register</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74198:
			</fo:inline> 8-bit shift register</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74238:
			</fo:inline> 3-line to 8-line decoder/demultiplexer</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74244:
			</fo:inline> octal 3-state buffer/line driver/line receiver</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74245:
			</fo:inline> octal bus transceivers with 3-state outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74247:
			</fo:inline> BCD to 7-segment decoder, active low, tails on 6 and 9</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74248:
			</fo:inline> BCD to 7-segment decoder, active high, tails on 6 and 9</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74253:
			</fo:inline> dual tri state 4-line to 1-line data selectors/multiplexers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74257:
			</fo:inline> quad 2-line to 1-line data selectors/multiplexers (3-state output)</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74260:
			</fo:inline> dual 5-input NOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74266:
			</fo:inline> quad 2-input XNOR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74273:
			</fo:inline> octal D-type flip-flop with clear</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74280:
			</fo:inline> 9 bit Odd-Even Parity Generator-Checker</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74283:
			</fo:inline> 4-bit binary full adder, alternative pinning</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74299:
			</fo:inline> 8-Input Universal Shift/Storage Register
with Common Parallel I/O Pins</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74373:
			</fo:inline> octal transparent latches</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74374:
			</fo:inline> octal positive-edge-triggered flip-flops</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74377:
			</fo:inline> Octal D Flip-Flop with enable</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74382:
			</fo:inline> 4-Bit Arithmetic Logic Unit</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74540:
			</fo:inline> octal buffer/line driver, inverted</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74541:
			</fo:inline> octal buffer/line driver</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74573:
			</fo:inline> octal transparent latches, different pinout compared to 74373</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74574:
			</fo:inline> octal positive-edge-triggered flip-flops, different pinout compared to 74374</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74590:
			</fo:inline> 8-bit binary counter with tri-state output registers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74595:
			</fo:inline> 8-Bit Shift Registers with 3-State Output Registers</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74670:
			</fo:inline> 3-state 4-by-4 Register File</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74682:
			</fo:inline> 8-bit digital comparator</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74688:
			</fo:inline> 8-bit identity comparator</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74779:
			</fo:inline> 8-Bit Bidirectional Binary Counter with 3-STATE Outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74804:
			</fo:inline> hex 2-input NAND gate

https://www.ti.com/lit/ds/symlink/sn74as804b.pdf</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74805:
			</fo:inline> hex 2-input NOR gate

http://www.ti.com/lit/ds/symlink/sn54as805b.pdf</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74808:
			</fo:inline> hex 2-input AND gate

http://www.ti.com/lit/ds/symlink/sn54as808b.pdf</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">74832:
			</fo:inline> hex 2-input OR gate

http://www.ti.com/lit/ds/symlink/sn54as832b.pdf</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">744017:
			</fo:inline> Johnson decade counter with 10 decoded outputs</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">744075:
			</fo:inline> triple 3-input OR gate</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">A623308A:
			</fo:inline> 8K X 8 BIT CMOS SRAM</fo:block>
 <fo:block text-indent="-8mm" start-indent="8mm" keep-together.within-page="always"><fo:inline font-weight="bold">RAM32Bit:
			</fo:inline> A 32-bit memory that allows byte access and can handle non-aligned 
memory addresses.</fo:block>
<fo:block id="LastPage"/></fo:flow></fo:page-sequence></fo:root>